{"version":3,"file":"index.js","sources":["../../../../../node_modules/longest-streak/index.js"],"sourcesContent":["/**\n * Get the count of the longest repeating streak of `substring` in `value`.\n *\n * @param {string} value\n *   Content to search in.\n * @param {string} substring\n *   Substring to look for, typically one character.\n * @returns {number}\n *   Count of most frequent adjacent `substring`s in `value`.\n */\nexport function longestStreak(value, substring) {\n  const source = String(value)\n  let index = source.indexOf(substring)\n  let expected = index\n  let count = 0\n  let max = 0\n\n  if (typeof substring !== 'string') {\n    throw new TypeError('Expected substring')\n  }\n\n  while (index !== -1) {\n    if (index === expected) {\n      if (++count > max) {\n        max = count\n      }\n    } else {\n      count = 1\n    }\n\n    expected = index + substring.length\n    index = source.indexOf(substring, expected)\n  }\n\n  return max\n}\n"],"names":["longestStreak","value","substring","source","index","expected","count","max"],"mappings":"AAUO,SAASA,EAAcC,GAAOC,GAAW;AAC9C,QAAMC,IAAS,OAAOF,CAAK;AAC3B,MAAIG,IAAQD,EAAO,QAAQD,CAAS,GAChCG,IAAWD,GACXE,IAAQ,GACRC,IAAM;AAEV,MAAI,OAAOL,KAAc;AACvB,UAAM,IAAI,UAAU,oBAAoB;AAG1C,SAAOE,MAAU;AACf,IAAIA,MAAUC,IACR,EAAEC,IAAQC,MACZA,IAAMD,KAGRA,IAAQ,GAGVD,IAAWD,IAAQF,EAAU,QAC7BE,IAAQD,EAAO,QAAQD,GAAWG,CAAQ;AAG5C,SAAOE;AACT;","x_google_ignoreList":[0]}