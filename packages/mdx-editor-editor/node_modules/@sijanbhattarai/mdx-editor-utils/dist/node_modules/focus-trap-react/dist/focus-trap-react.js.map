{"version":3,"file":"focus-trap-react.js","sources":["../../../../../../node_modules/focus-trap-react/dist/focus-trap-react.js"],"sourcesContent":["\"use strict\";\n\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction _classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError(\"Cannot call a class as a function\"); }\nfunction _defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, \"value\" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o); } }\nfunction _createClass(e, r, t) { return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, \"prototype\", { writable: !1 }), e; }\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\nfunction _possibleConstructorReturn(t, e) { if (e && (\"object\" == _typeof(e) || \"function\" == typeof e)) return e; if (void 0 !== e) throw new TypeError(\"Derived constructors may only return object or undefined\"); return _assertThisInitialized(t); }\nfunction _assertThisInitialized(e) { if (void 0 === e) throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); return e; }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\nfunction _getPrototypeOf(t) { return _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function (t) { return t.__proto__ || Object.getPrototypeOf(t); }, _getPrototypeOf(t); }\nfunction _inherits(t, e) { if (\"function\" != typeof e && null !== e) throw new TypeError(\"Super expression must either be null or a function\"); t.prototype = Object.create(e && e.prototype, { constructor: { value: t, writable: !0, configurable: !0 } }), Object.defineProperty(t, \"prototype\", { writable: !1 }), e && _setPrototypeOf(t, e); }\nfunction _setPrototypeOf(t, e) { return _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function (t, e) { return t.__proto__ = e, t; }, _setPrototypeOf(t, e); }\nfunction _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nvar React = require('react');\nvar PropTypes = require('prop-types');\nvar _require = require('focus-trap'),\n  createFocusTrap = _require.createFocusTrap;\nvar _require2 = require('tabbable'),\n  isFocusable = _require2.isFocusable;\nvar FocusTrap = /*#__PURE__*/function (_React$Component) {\n  function FocusTrap(props) {\n    var _this;\n    _classCallCheck(this, FocusTrap);\n    _this = _callSuper(this, FocusTrap, [props]);\n    /**\n     * Gets the node for the given option, which is expected to be an option that\n     *  can be either a DOM node, a string that is a selector to get a node, `false`\n     *  (if a node is explicitly NOT given), or a function that returns any of these\n     *  values.\n     * @param {string} optionName\n     * @returns {undefined | false | HTMLElement | SVGElement} Returns\n     *  `undefined` if the option is not specified; `false` if the option\n     *  resolved to `false` (node explicitly not given); otherwise, the resolved\n     *  DOM node.\n     * @throws {Error} If the option is set, not `false`, and is not, or does not\n     *  resolve to a node.\n     */\n    _defineProperty(_this, \"getNodeForOption\", function (optionName) {\n      var _this$internalOptions;\n      // use internal options first, falling back to original options\n      var optionValue = (_this$internalOptions = this.internalOptions[optionName]) !== null && _this$internalOptions !== void 0 ? _this$internalOptions : this.originalOptions[optionName];\n      if (typeof optionValue === 'function') {\n        for (var _len = arguments.length, params = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n          params[_key - 1] = arguments[_key];\n        }\n        optionValue = optionValue.apply(void 0, params);\n      }\n      if (optionValue === true) {\n        optionValue = undefined; // use default value\n      }\n      if (!optionValue) {\n        if (optionValue === undefined || optionValue === false) {\n          return optionValue;\n        }\n        // else, empty string (invalid), null (invalid), 0 (invalid)\n\n        throw new Error(\"`\".concat(optionName, \"` was specified but was not a node, or did not return a node\"));\n      }\n      var node = optionValue; // could be HTMLElement, SVGElement, or non-empty string at this point\n\n      if (typeof optionValue === 'string') {\n        var _this$getDocument;\n        node = (_this$getDocument = this.getDocument()) === null || _this$getDocument === void 0 ? void 0 : _this$getDocument.querySelector(optionValue); // resolve to node, or null if fails\n        if (!node) {\n          throw new Error(\"`\".concat(optionName, \"` as selector refers to no known node\"));\n        }\n      }\n      return node;\n    });\n    _this.handleDeactivate = _this.handleDeactivate.bind(_this);\n    _this.handlePostDeactivate = _this.handlePostDeactivate.bind(_this);\n    _this.handleClickOutsideDeactivates = _this.handleClickOutsideDeactivates.bind(_this);\n\n    // focus-trap options used internally when creating the trap\n    _this.internalOptions = {\n      // We need to hijack the returnFocusOnDeactivate option,\n      // because React can move focus into the element before we arrived at\n      // this lifecycle hook (e.g. with autoFocus inputs). So the component\n      // captures the previouslyFocusedElement in componentWillMount,\n      // then (optionally) returns focus to it in componentWillUnmount.\n      returnFocusOnDeactivate: false,\n      // the rest of these are also related to deactivation of the trap, and we\n      //  need to use them and control them as well\n      checkCanReturnFocus: null,\n      onDeactivate: _this.handleDeactivate,\n      onPostDeactivate: _this.handlePostDeactivate,\n      // we need to special-case this setting as well so that we can know if we should\n      //  NOT return focus if the trap gets auto-deactivated as the result of an\n      //  outside click (otherwise, we'll always think we should return focus because\n      //  of how we manage that flag internally here)\n      clickOutsideDeactivates: _this.handleClickOutsideDeactivates\n    };\n\n    // original options provided by the consumer\n    _this.originalOptions = {\n      // because of the above `internalOptions`, we maintain our own flag for\n      //  this option, and default it to `true` because that's focus-trap's default\n      returnFocusOnDeactivate: true,\n      // because of the above `internalOptions`, we keep these separate since\n      //  they're part of the deactivation process which we configure (internally) to\n      //  be shared between focus-trap and focus-trap-react\n      onDeactivate: null,\n      onPostDeactivate: null,\n      checkCanReturnFocus: null,\n      // the user's setting, defaulted to false since focus-trap defaults this to false\n      clickOutsideDeactivates: false\n    };\n    var focusTrapOptions = props.focusTrapOptions;\n    for (var optionName in focusTrapOptions) {\n      if (!Object.prototype.hasOwnProperty.call(focusTrapOptions, optionName)) {\n        continue;\n      }\n      if (optionName === 'returnFocusOnDeactivate' || optionName === 'onDeactivate' || optionName === 'onPostDeactivate' || optionName === 'checkCanReturnFocus' || optionName === 'clickOutsideDeactivates') {\n        _this.originalOptions[optionName] = focusTrapOptions[optionName];\n        continue; // exclude from internalOptions\n      }\n      _this.internalOptions[optionName] = focusTrapOptions[optionName];\n    }\n\n    // if set, `{ target: Node, allowDeactivation: boolean }` where `target` is the outside\n    //  node that was clicked, and `allowDeactivation` is the result of the consumer's\n    //  option (stored in `this.originalOptions.clickOutsideDeactivates`, which may be a\n    //  function) whether to allow or deny auto-deactivation on click on this outside node\n    _this.outsideClick = null;\n\n    // elements from which to create the focus trap on mount; if a child is used\n    //  instead of the `containerElements` prop, we'll get the child's related\n    //  element when the trap renders and then is declared 'mounted'\n    _this.focusTrapElements = props.containerElements || [];\n\n    // now we remember what the currently focused element is, not relying on focus-trap\n    _this.updatePreviousElement();\n    return _this;\n  }\n\n  /**\n   * Gets the configured document.\n   * @returns {Document|undefined} Configured document, falling back to the main\n   *  document, if it exists. During SSR, `undefined` is returned since the\n   *  document doesn't exist.\n   */\n  _inherits(FocusTrap, _React$Component);\n  return _createClass(FocusTrap, [{\n    key: \"getDocument\",\n    value: function getDocument() {\n      // SSR: careful to check if `document` exists before accessing it as a variable\n      return this.props.focusTrapOptions.document || (typeof document !== 'undefined' ? document : undefined);\n    }\n  }, {\n    key: \"getReturnFocusNode\",\n    value: function getReturnFocusNode() {\n      var node = this.getNodeForOption('setReturnFocus', this.previouslyFocusedElement);\n      return node ? node : node === false ? false : this.previouslyFocusedElement;\n    }\n\n    /** Update the previously focused element with the currently focused element. */\n  }, {\n    key: \"updatePreviousElement\",\n    value: function updatePreviousElement() {\n      var currentDocument = this.getDocument();\n      if (currentDocument) {\n        this.previouslyFocusedElement = currentDocument.activeElement;\n      }\n    }\n  }, {\n    key: \"deactivateTrap\",\n    value: function deactivateTrap() {\n      // NOTE: it's possible the focus trap has already been deactivated without our knowing it,\n      //  especially if the user set the `clickOutsideDeactivates: true` option on the trap,\n      //  and the mouse was clicked on some element outside the trap; at that point, focus-trap\n      //  will initiate its auto-deactivation process, which will call our own\n      //  handleDeactivate(), which will call into this method\n      if (!this.focusTrap || !this.focusTrap.active) {\n        return;\n      }\n      this.focusTrap.deactivate({\n        // NOTE: we never let the trap return the focus since we do that ourselves\n        returnFocus: false,\n        // we'll call this in our own post deactivate handler so make sure the trap doesn't\n        //  do it prematurely\n        checkCanReturnFocus: null,\n        // let it call the user's original deactivate handler, if any, instead of\n        //  our own which calls back into this function\n        onDeactivate: this.originalOptions.onDeactivate\n        // NOTE: for post deactivate, don't specify anything so that it calls the\n        //  onPostDeactivate handler specified on `this.internalOptions`\n        //  which will always be our own `handlePostDeactivate()` handler, which\n        //  will finish things off by calling the user's provided onPostDeactivate\n        //  handler, if any, at the right time\n        // onPostDeactivate: NOTHING\n      });\n    }\n  }, {\n    key: \"handleClickOutsideDeactivates\",\n    value: function handleClickOutsideDeactivates(event) {\n      // use consumer's option (or call their handler) as the permission or denial\n      var allowDeactivation = typeof this.originalOptions.clickOutsideDeactivates === 'function' ? this.originalOptions.clickOutsideDeactivates.call(null, event) // call out of context\n      : this.originalOptions.clickOutsideDeactivates; // boolean\n\n      if (allowDeactivation) {\n        // capture the outside target that was clicked so we can use it in the deactivation\n        //  process since the consumer allowed it to cause auto-deactivation\n        this.outsideClick = {\n          target: event.target,\n          allowDeactivation: allowDeactivation\n        };\n      }\n      return allowDeactivation;\n    }\n  }, {\n    key: \"handleDeactivate\",\n    value: function handleDeactivate() {\n      if (this.originalOptions.onDeactivate) {\n        this.originalOptions.onDeactivate.call(null); // call user's handler out of context\n      }\n      this.deactivateTrap();\n    }\n  }, {\n    key: \"handlePostDeactivate\",\n    value: function handlePostDeactivate() {\n      var _this2 = this;\n      var finishDeactivation = function finishDeactivation() {\n        var returnFocusNode = _this2.getReturnFocusNode();\n        var canReturnFocus = !!(\n        // did the consumer allow it?\n\n        _this2.originalOptions.returnFocusOnDeactivate && // can we actually focus the node?\n        returnFocusNode !== null && returnFocusNode !== void 0 && returnFocusNode.focus && (\n        // was there an outside click that allowed deactivation?\n        !_this2.outsideClick ||\n        // did the consumer allow deactivation when the outside node was clicked?\n        _this2.outsideClick.allowDeactivation &&\n        // is the outside node NOT focusable (implying that it did NOT receive focus\n        //  as a result of the click-through) -- in which case do NOT restore focus\n        //  to `returnFocusNode` because focus should remain on the outside node\n        !isFocusable(_this2.outsideClick.target, _this2.internalOptions.tabbableOptions))\n\n        // if no, the restore focus to `returnFocusNode` at this point\n        );\n        var _this2$internalOption = _this2.internalOptions.preventScroll,\n          preventScroll = _this2$internalOption === void 0 ? false : _this2$internalOption;\n        if (canReturnFocus) {\n          // return focus to the element that had focus when the trap was activated\n          returnFocusNode.focus({\n            preventScroll: preventScroll\n          });\n        }\n        if (_this2.originalOptions.onPostDeactivate) {\n          _this2.originalOptions.onPostDeactivate.call(null); // don't call it in context of \"this\"\n        }\n        _this2.outsideClick = null; // reset: no longer needed\n      };\n      if (this.originalOptions.checkCanReturnFocus) {\n        this.originalOptions.checkCanReturnFocus.call(null, this.getReturnFocusNode()) // call out of context\n        .then(finishDeactivation, finishDeactivation);\n      } else {\n        finishDeactivation();\n      }\n    }\n  }, {\n    key: \"setupFocusTrap\",\n    value: function setupFocusTrap() {\n      if (this.focusTrap) {\n        // trap already exists: it's possible we're in StrictMode and we're being remounted,\n        //  in which case, we will have deactivated the trap when we got unmounted (remember,\n        //  StrictMode, in development, purposely unmounts and remounts components after\n        //  mounting them the first time to make sure they have reusable state,\n        //  @see https://reactjs.org/docs/strict-mode.html#ensuring-reusable-state) so now\n        //  we need to restore the state of the trap according to our component state\n        // NOTE: Strict mode __violates__ assumptions about the `componentWillUnmount()` API\n        //  which clearly states -- even for React 18 -- that, \"Once a component instance is\n        //  unmounted, __it will never be mounted again.__\" (emphasis ours). So when we get\n        //  unmounted, we assume we're gone forever and we deactivate the trap. But then\n        //  we get remounted and we're supposed to restore state. But if you had paused,\n        //  we've now deactivated (we don't know we're amount to get remounted again)\n        //  which means we need to reactivate and then pause. Otherwise, do nothing.\n        if (this.props.active && !this.focusTrap.active) {\n          this.focusTrap.activate();\n          if (this.props.paused) {\n            this.focusTrap.pause();\n          }\n        }\n      } else {\n        var nodesExist = this.focusTrapElements.some(Boolean);\n        if (nodesExist) {\n          // eslint-disable-next-line react/prop-types -- _createFocusTrap is an internal prop\n          this.focusTrap = this.props._createFocusTrap(this.focusTrapElements, this.internalOptions);\n          if (this.props.active) {\n            this.focusTrap.activate();\n          }\n          if (this.props.paused) {\n            this.focusTrap.pause();\n          }\n        }\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (this.props.active) {\n        this.setupFocusTrap();\n      }\n      // else, wait for later activation in case the `focusTrapOptions` will be updated\n      //  again before the trap is activated (e.g. if waiting to know what the document\n      //  object will be, so the Trap must be rendered, but the consumer is waiting to\n      //  activate until they have obtained the document from a ref)\n      //  @see https://github.com/focus-trap/focus-trap-react/issues/539\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (this.focusTrap) {\n        if (prevProps.containerElements !== this.props.containerElements) {\n          this.focusTrap.updateContainerElements(this.props.containerElements);\n        }\n        var hasActivated = !prevProps.active && this.props.active;\n        var hasDeactivated = prevProps.active && !this.props.active;\n        var hasPaused = !prevProps.paused && this.props.paused;\n        var hasUnpaused = prevProps.paused && !this.props.paused;\n        if (hasActivated) {\n          this.updatePreviousElement();\n          this.focusTrap.activate();\n        }\n        if (hasDeactivated) {\n          this.deactivateTrap();\n          return; // un/pause does nothing on an inactive trap\n        }\n        if (hasPaused) {\n          this.focusTrap.pause();\n        }\n        if (hasUnpaused) {\n          this.focusTrap.unpause();\n        }\n      } else {\n        // NOTE: if we're in `componentDidUpdate` and we don't have a trap yet,\n        //  it either means it shouldn't be active, or it should be but none of\n        //  of given `containerElements` were present in the DOM the last time\n        //  we tried to create the trap\n\n        if (prevProps.containerElements !== this.props.containerElements) {\n          this.focusTrapElements = this.props.containerElements;\n        }\n\n        // don't create the trap unless it should be active in case the consumer\n        //  is still updating `focusTrapOptions`\n        //  @see https://github.com/focus-trap/focus-trap-react/issues/539\n        if (this.props.active) {\n          this.updatePreviousElement();\n          this.setupFocusTrap();\n        }\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.deactivateTrap();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n      var child = this.props.children ? React.Children.only(this.props.children) : undefined;\n      if (child) {\n        if (child.type && child.type === React.Fragment) {\n          throw new Error('A focus-trap cannot use a Fragment as its child container. Try replacing it with a <div> element.');\n        }\n        var callbackRef = function callbackRef(element) {\n          var containerElements = _this3.props.containerElements;\n          if (child) {\n            if (typeof child.ref === 'function') {\n              child.ref(element);\n            } else if (child.ref) {\n              child.ref.current = element;\n            }\n          }\n          _this3.focusTrapElements = containerElements ? containerElements : [element];\n        };\n        var childWithRef = React.cloneElement(child, {\n          ref: callbackRef\n        });\n        return childWithRef;\n      }\n      return null;\n    }\n  }]);\n}(React.Component); // support server-side rendering where `Element` will not be defined\nvar ElementType = typeof Element === 'undefined' ? Function : Element;\nFocusTrap.propTypes = {\n  active: PropTypes.bool,\n  paused: PropTypes.bool,\n  focusTrapOptions: PropTypes.shape({\n    document: PropTypes.object,\n    onActivate: PropTypes.func,\n    onPostActivate: PropTypes.func,\n    checkCanFocusTrap: PropTypes.func,\n    onPause: PropTypes.func,\n    onPostPause: PropTypes.func,\n    onUnpause: PropTypes.func,\n    onPostUnpause: PropTypes.func,\n    onDeactivate: PropTypes.func,\n    onPostDeactivate: PropTypes.func,\n    checkCanReturnFocus: PropTypes.func,\n    initialFocus: PropTypes.oneOfType([PropTypes.instanceOf(ElementType), PropTypes.string, PropTypes.bool, PropTypes.func]),\n    fallbackFocus: PropTypes.oneOfType([PropTypes.instanceOf(ElementType), PropTypes.string,\n    // NOTE: does not support `false` as value (or return value from function)\n    PropTypes.func]),\n    escapeDeactivates: PropTypes.oneOfType([PropTypes.bool, PropTypes.func]),\n    clickOutsideDeactivates: PropTypes.oneOfType([PropTypes.bool, PropTypes.func]),\n    returnFocusOnDeactivate: PropTypes.bool,\n    setReturnFocus: PropTypes.oneOfType([PropTypes.instanceOf(ElementType), PropTypes.string, PropTypes.bool, PropTypes.func]),\n    allowOutsideClick: PropTypes.oneOfType([PropTypes.bool, PropTypes.func]),\n    preventScroll: PropTypes.bool,\n    tabbableOptions: PropTypes.shape({\n      displayCheck: PropTypes.oneOf(['full', 'legacy-full', 'non-zero-area', 'none']),\n      getShadowRoot: PropTypes.oneOfType([PropTypes.bool, PropTypes.func])\n    }),\n    trapStack: PropTypes.array,\n    isKeyForward: PropTypes.func,\n    isKeyBackward: PropTypes.func\n  }),\n  containerElements: PropTypes.arrayOf(PropTypes.instanceOf(ElementType)),\n  // DOM element ONLY\n  children: PropTypes.oneOfType([PropTypes.element,\n  // React element\n  PropTypes.instanceOf(ElementType) // DOM element\n  ])\n\n  // NOTE: _createFocusTrap is internal, for testing purposes only, so we don't\n  //  specify it here. It's expected to be set to the function returned from\n  //  require('focus-trap'), or one with a compatible interface.\n};\nFocusTrap.defaultProps = {\n  active: true,\n  paused: false,\n  focusTrapOptions: {},\n  _createFocusTrap: createFocusTrap\n};\nmodule.exports = FocusTrap;"],"names":["_typeof","o","_classCallCheck","a","n","_defineProperties","e","r","t","_toPropertyKey","_createClass","_callSuper","_getPrototypeOf","_possibleConstructorReturn","_isNativeReflectConstruct","_assertThisInitialized","_inherits","_setPrototypeOf","_defineProperty","i","_toPrimitive","React","require$$0","PropTypes","require$$1","_require","require$$2","createFocusTrap","_require2","require$$3","isFocusable","FocusTrap","_React$Component","props","_this","optionName","_this$internalOptions","optionValue","_len","params","_key","node","_this$getDocument","focusTrapOptions","currentDocument","event","allowDeactivation","_this2","finishDeactivation","returnFocusNode","canReturnFocus","_this2$internalOption","preventScroll","nodesExist","prevProps","hasActivated","hasDeactivated","hasPaused","hasUnpaused","_this3","child","callbackRef","element","containerElements","childWithRef","ElementType","focusTrapReact"],"mappings":"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","x_google_ignoreList":[0]}