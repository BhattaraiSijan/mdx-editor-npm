import { encodeCharacterReference as m } from "./encode-character-reference.js";
import { patternInScope as w } from "./pattern-in-scope.js";
function j(i, a, r) {
  const n = (r.before || "") + (a || "") + (r.after || ""), s = [], f = [], t = {};
  let o = -1;
  for (; ++o < i.unsafe.length; ) {
    const e = i.unsafe[o];
    if (!w(i.stack, e))
      continue;
    const x = i.compilePattern(e);
    let u;
    for (; u = x.exec(n); ) {
      const p = "before" in e || !!e.atBreak, d = "after" in e, l = u.index + (p ? u[1].length : 0);
      s.includes(l) ? (t[l].before && !p && (t[l].before = !1), t[l].after && !d && (t[l].after = !1)) : (s.push(l), t[l] = { before: p, after: d });
    }
  }
  s.sort(k);
  let c = r.before ? r.before.length : 0;
  const h = n.length - (r.after ? r.after.length : 0);
  for (o = -1; ++o < s.length; ) {
    const e = s[o];
    e < c || e >= h || e + 1 < h && s[o + 1] === e + 1 && t[e].after && !t[e + 1].before && !t[e + 1].after || s[o - 1] === e - 1 && t[e].before && !t[e - 1].before && !t[e - 1].after || (c !== e && f.push(b(n.slice(c, e), "\\")), c = e, /[!-/:-@[-`{-~]/.test(n.charAt(e)) && (!r.encode || !r.encode.includes(n.charAt(e))) ? f.push("\\") : (f.push(m(n.charCodeAt(e))), c++));
  }
  return f.push(b(n.slice(c, h), r.after)), f.join("");
}
function k(i, a) {
  return i - a;
}
function b(i, a) {
  const r = /\\(?=[!-/:-@[-`{-~])/g, n = [], s = [], f = i + a;
  let t = -1, o = 0, c;
  for (; c = r.exec(f); )
    n.push(c.index);
  for (; ++t < n.length; )
    o !== n[t] && s.push(i.slice(o, n[t])), s.push("\\"), o = n[t];
  return s.push(i.slice(o)), s.join("");
}
export {
  j as safe
};
//# sourceMappingURL=safe.js.map
