const r = {}.hasOwnProperty;
function e(n, c) {
  let a = -1, f;
  if (c.extensions)
    for (; ++a < c.extensions.length; )
      e(n, c.extensions[a]);
  for (f in c)
    if (r.call(c, f))
      switch (f) {
        case "extensions":
          break;
        /* c8 ignore next 4 */
        case "unsafe": {
          i(n[f], c[f]);
          break;
        }
        case "join": {
          i(n[f], c[f]);
          break;
        }
        case "handlers": {
          l(n[f], c[f]);
          break;
        }
        default:
          n.options[f] = c[f];
      }
  return n;
}
function i(n, c) {
  c && n.push(...c);
}
function l(n, c) {
  c && Object.assign(n, c);
}
export {
  e as configure
};
//# sourceMappingURL=configure.js.map
