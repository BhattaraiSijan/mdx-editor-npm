{"version":3,"file":"image.js","sources":["../../../../../../../node_modules/mdast-util-to-markdown/lib/handle/image.js"],"sourcesContent":["/**\n * @import {Info, State} from 'mdast-util-to-markdown'\n * @import {Image, Parents} from 'mdast'\n */\n\nimport {checkQuote} from '../util/check-quote.js'\n\nimage.peek = imagePeek\n\n/**\n * @param {Image} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function image(node, _, state, info) {\n  const quote = checkQuote(state)\n  const suffix = quote === '\"' ? 'Quote' : 'Apostrophe'\n  const exit = state.enter('image')\n  let subexit = state.enter('label')\n  const tracker = state.createTracker(info)\n  let value = tracker.move('![')\n  value += tracker.move(\n    state.safe(node.alt, {before: value, after: ']', ...tracker.current()})\n  )\n  value += tracker.move('](')\n\n  subexit()\n\n  if (\n    // If there’s no url but there is a title…\n    (!node.url && node.title) ||\n    // If there are control characters or whitespace.\n    /[\\0- \\u007F]/.test(node.url)\n  ) {\n    subexit = state.enter('destinationLiteral')\n    value += tracker.move('<')\n    value += tracker.move(\n      state.safe(node.url, {before: value, after: '>', ...tracker.current()})\n    )\n    value += tracker.move('>')\n  } else {\n    // No whitespace, raw is prettier.\n    subexit = state.enter('destinationRaw')\n    value += tracker.move(\n      state.safe(node.url, {\n        before: value,\n        after: node.title ? ' ' : ')',\n        ...tracker.current()\n      })\n    )\n  }\n\n  subexit()\n\n  if (node.title) {\n    subexit = state.enter(`title${suffix}`)\n    value += tracker.move(' ' + quote)\n    value += tracker.move(\n      state.safe(node.title, {\n        before: value,\n        after: quote,\n        ...tracker.current()\n      })\n    )\n    value += tracker.move(quote)\n    subexit()\n  }\n\n  value += tracker.move(')')\n  exit()\n\n  return value\n}\n\n/**\n * @returns {string}\n */\nfunction imagePeek() {\n  return '!'\n}\n"],"names":["image","imagePeek","node","_","state","info","quote","checkQuote","suffix","exit","subexit","tracker","value"],"mappings":";AAOAA,EAAM,OAAOC;AASN,SAASD,EAAME,GAAMC,GAAGC,GAAOC,GAAM;AAC1C,QAAMC,IAAQC,EAAWH,CAAK,GACxBI,IAASF,MAAU,MAAM,UAAU,cACnCG,IAAOL,EAAM,MAAM,OAAO;AAChC,MAAIM,IAAUN,EAAM,MAAM,OAAO;AACjC,QAAMO,IAAUP,EAAM,cAAcC,CAAI;AACxC,MAAIO,IAAQD,EAAQ,KAAK,IAAI;AAC7B,SAAAC,KAASD,EAAQ;AAAA,IACfP,EAAM,KAAKF,EAAK,KAAK,EAAC,QAAQU,GAAO,OAAO,KAAK,GAAGD,EAAQ,QAAO,EAAE,CAAC;AAAA,EAC1E,GACEC,KAASD,EAAQ,KAAK,IAAI,GAE1BD,EAAO;AAAA,EAIJ,CAACR,EAAK,OAAOA,EAAK;AAAA,EAEnB,eAAe,KAAKA,EAAK,GAAG,KAE5BQ,IAAUN,EAAM,MAAM,oBAAoB,GAC1CQ,KAASD,EAAQ,KAAK,GAAG,GACzBC,KAASD,EAAQ;AAAA,IACfP,EAAM,KAAKF,EAAK,KAAK,EAAC,QAAQU,GAAO,OAAO,KAAK,GAAGD,EAAQ,QAAO,EAAE,CAAC;AAAA,EAC5E,GACIC,KAASD,EAAQ,KAAK,GAAG,MAGzBD,IAAUN,EAAM,MAAM,gBAAgB,GACtCQ,KAASD,EAAQ;AAAA,IACfP,EAAM,KAAKF,EAAK,KAAK;AAAA,MACnB,QAAQU;AAAA,MACR,OAAOV,EAAK,QAAQ,MAAM;AAAA,MAC1B,GAAGS,EAAQ,QAAO;AAAA,IAC1B,CAAO;AAAA,EACP,IAGED,EAAO,GAEHR,EAAK,UACPQ,IAAUN,EAAM,MAAM,QAAQI,CAAM,EAAE,GACtCI,KAASD,EAAQ,KAAK,MAAML,CAAK,GACjCM,KAASD,EAAQ;AAAA,IACfP,EAAM,KAAKF,EAAK,OAAO;AAAA,MACrB,QAAQU;AAAA,MACR,OAAON;AAAA,MACP,GAAGK,EAAQ,QAAO;AAAA,IAC1B,CAAO;AAAA,EACP,GACIC,KAASD,EAAQ,KAAKL,CAAK,GAC3BI,EAAO,IAGTE,KAASD,EAAQ,KAAK,GAAG,GACzBF,EAAI,GAEGG;AACT;AAKA,SAASX,IAAY;AACnB,SAAO;AACT;","x_google_ignoreList":[0]}