{"version":3,"file":"inputValidation.js","sources":["../src/inputValidation.tsx"],"sourcesContent":["// Minimal validation functions for CreateInterface component\n\nexport const handleMapDateValidation = (value: string): string => {\n  // Basic date validation - can be enhanced as needed\n  if (!value) return '';\n  \n  // Simple date format check (YYYY-MM-DD or YYYY-MM-DDTHH:mm:ss)\n  const datePattern = /^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2})?/;\n  if (!datePattern.test(value)) {\n    return 'Invalid date format. Use YYYY-MM-DD or YYYY-MM-DDTHH:mm:ss';\n  }\n  \n  return '';\n};\n\nexport const handleMapArrayValidation = (value: string): string => {\n  // Basic array validation for coordinates\n  if (!value) return '';\n  \n  try {\n    const parsed = JSON.parse(value);\n    if (!Array.isArray(parsed)) {\n      return 'Value must be a valid array';\n    }\n    if (parsed.length !== 2) {\n      return 'Array must contain exactly 2 coordinates';\n    }\n    if (!parsed.every(v => typeof v === 'number')) {\n      return 'All values must be numbers';\n    }\n  } catch (e) {\n    return 'Invalid array format. Use [x, y] format';\n  }\n  \n  return '';\n};\n\nexport const handleChartDateValidation = (value: string): string => {\n  // Similar to map date validation\n  return handleMapDateValidation(value);\n};"],"names":["handleMapDateValidation","value","handleMapArrayValidation","parsed","v","handleChartDateValidation"],"mappings":"AAEO,MAAMA,IAA0B,CAACC,MAEjCA,IAGe,0CACH,KAAKA,CAAK,IAIpB,KAHE,+DALU,IAWRC,IAA2B,CAACD,MAA0B;AAEjE,MAAI,CAACA,EAAO,QAAO;AAEnB,MAAI;AACF,UAAME,IAAS,KAAK,MAAMF,CAAK;AAC/B,QAAI,CAAC,MAAM,QAAQE,CAAM;AACvB,aAAO;AAET,QAAIA,EAAO,WAAW;AACpB,aAAO;AAET,QAAI,CAACA,EAAO,MAAM,OAAK,OAAOC,KAAM,QAAQ;AAC1C,aAAO;AAAA,EAEX,QAAY;AACV,WAAO;AAAA,EACT;AAEA,SAAO;AACT,GAEaC,IAA4B,CAACJ,MAEjCD,EAAwBC,CAAK;"}