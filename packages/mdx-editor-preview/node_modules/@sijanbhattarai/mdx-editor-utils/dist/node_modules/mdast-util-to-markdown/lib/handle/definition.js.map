{"version":3,"file":"definition.js","sources":["../../../../../../../node_modules/mdast-util-to-markdown/lib/handle/definition.js"],"sourcesContent":["/**\n * @import {Info, State} from 'mdast-util-to-markdown'\n * @import {Definition, Parents} from 'mdast'\n */\n\nimport {checkQuote} from '../util/check-quote.js'\n\n/**\n * @param {Definition} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function definition(node, _, state, info) {\n  const quote = checkQuote(state)\n  const suffix = quote === '\"' ? 'Quote' : 'Apostrophe'\n  const exit = state.enter('definition')\n  let subexit = state.enter('label')\n  const tracker = state.createTracker(info)\n  let value = tracker.move('[')\n  value += tracker.move(\n    state.safe(state.associationId(node), {\n      before: value,\n      after: ']',\n      ...tracker.current()\n    })\n  )\n  value += tracker.move(']: ')\n\n  subexit()\n\n  if (\n    // If there’s no url, or…\n    !node.url ||\n    // If there are control characters or whitespace.\n    /[\\0- \\u007F]/.test(node.url)\n  ) {\n    subexit = state.enter('destinationLiteral')\n    value += tracker.move('<')\n    value += tracker.move(\n      state.safe(node.url, {before: value, after: '>', ...tracker.current()})\n    )\n    value += tracker.move('>')\n  } else {\n    // No whitespace, raw is prettier.\n    subexit = state.enter('destinationRaw')\n    value += tracker.move(\n      state.safe(node.url, {\n        before: value,\n        after: node.title ? ' ' : '\\n',\n        ...tracker.current()\n      })\n    )\n  }\n\n  subexit()\n\n  if (node.title) {\n    subexit = state.enter(`title${suffix}`)\n    value += tracker.move(' ' + quote)\n    value += tracker.move(\n      state.safe(node.title, {\n        before: value,\n        after: quote,\n        ...tracker.current()\n      })\n    )\n    value += tracker.move(quote)\n    subexit()\n  }\n\n  exit()\n\n  return value\n}\n"],"names":["definition","node","_","state","info","quote","checkQuote","suffix","exit","subexit","tracker","value"],"mappings":";AAcO,SAASA,EAAWC,GAAMC,GAAGC,GAAOC,GAAM;AAC/C,QAAMC,IAAQC,EAAWH,CAAK,GACxBI,IAASF,MAAU,MAAM,UAAU,cACnCG,IAAOL,EAAM,MAAM,YAAY;AACrC,MAAIM,IAAUN,EAAM,MAAM,OAAO;AACjC,QAAMO,IAAUP,EAAM,cAAcC,CAAI;AACxC,MAAIO,IAAQD,EAAQ,KAAK,GAAG;AAC5B,SAAAC,KAASD,EAAQ;AAAA,IACfP,EAAM,KAAKA,EAAM,cAAcF,CAAI,GAAG;AAAA,MACpC,QAAQU;AAAA,MACR,OAAO;AAAA,MACP,GAAGD,EAAQ,QAAO;AAAA,IACxB,CAAK;AAAA,EACL,GACEC,KAASD,EAAQ,KAAK,KAAK,GAE3BD,EAAO;AAAA,EAIL,CAACR,EAAK;AAAA,EAEN,eAAe,KAAKA,EAAK,GAAG,KAE5BQ,IAAUN,EAAM,MAAM,oBAAoB,GAC1CQ,KAASD,EAAQ,KAAK,GAAG,GACzBC,KAASD,EAAQ;AAAA,IACfP,EAAM,KAAKF,EAAK,KAAK,EAAC,QAAQU,GAAO,OAAO,KAAK,GAAGD,EAAQ,QAAO,EAAE,CAAC;AAAA,EAC5E,GACIC,KAASD,EAAQ,KAAK,GAAG,MAGzBD,IAAUN,EAAM,MAAM,gBAAgB,GACtCQ,KAASD,EAAQ;AAAA,IACfP,EAAM,KAAKF,EAAK,KAAK;AAAA,MACnB,QAAQU;AAAA,MACR,OAAOV,EAAK,QAAQ,MAAM;AAAA;AAAA,MAC1B,GAAGS,EAAQ,QAAO;AAAA,IAC1B,CAAO;AAAA,EACP,IAGED,EAAO,GAEHR,EAAK,UACPQ,IAAUN,EAAM,MAAM,QAAQI,CAAM,EAAE,GACtCI,KAASD,EAAQ,KAAK,MAAML,CAAK,GACjCM,KAASD,EAAQ;AAAA,IACfP,EAAM,KAAKF,EAAK,OAAO;AAAA,MACrB,QAAQU;AAAA,MACR,OAAON;AAAA,MACP,GAAGK,EAAQ,QAAO;AAAA,IAC1B,CAAO;AAAA,EACP,GACIC,KAASD,EAAQ,KAAKL,CAAK,GAC3BI,EAAO,IAGTD,EAAI,GAEGG;AACT;","x_google_ignoreList":[0]}