"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.InsertIframe = exports.InsertSectionBreak = exports.InsertLineGraph = exports.InsertMapButton = exports.DEFAULT_CHART_PROPS = exports.DEFAULT_MAP_PROPS = void 0;
const react_1 = __importDefault(require("react"));
const editor_1 = require("@mdxeditor/editor");
const react_uswds_1 = require("@trussworks/react-uswds");
exports.DEFAULT_MAP_PROPS = {
    center: '[-94.5, 41.25]',
    zoom: '8.3',
    datasetId: 'ct-ch4-monthgrid-v2023',
    layerId: 'total-ch4',
    dateTime: '2020-12-31',
    compareDateTime: '2015-12-31',
    compareLabel: '2020 VS 2015',
    attrUrl: '',
    attrAuthor: '',
    caption: '',
};
exports.DEFAULT_CHART_PROPS = {
    dataPath: '',
    dateFormat: '%Y-%m-%d',
    idKey: 'id',
    xKey: 'date',
    yKey: 'value',
    yAxisLabel: 'Value',
    xAxisLabel: 'Date',
    highlightStart: '',
    highlightEnd: '',
    highlightLabel: '',
    availableDomain: '',
    altTitle: 'Chart',
    colorScheme: 'default',
    colors: '',
    altDesc: 'A data visualization chart',
};
const InsertMapButton = () => {
    const insertJsx = (0, editor_1.usePublisher)(editor_1.insertJsx$);
    const handleClick = () => {
        try {
            insertJsx({
                name: 'MapBlock',
                kind: 'flow',
                props: {
                    datasetId: exports.DEFAULT_MAP_PROPS.datasetId,
                    layerId: exports.DEFAULT_MAP_PROPS.layerId,
                    dateTime: exports.DEFAULT_MAP_PROPS.dateTime,
                },
            });
        }
        catch (error) {
            console.error('Error inserting Map component:', error);
            alert('Could not insert Map component. See console for details.');
        }
    };
    return (react_1.default.createElement(editor_1.Button, { onClick: handleClick, title: 'Insert Map', className: 'text-sm display-flex flex-align-center padding-1' },
        react_1.default.createElement(react_uswds_1.Icon.Map, { className: 'margin-right-05 width-3 height-3', "aria-hidden": "true" }),
        "Add Map"));
};
exports.InsertMapButton = InsertMapButton;
const InsertLineGraph = () => {
    const insertJsx = (0, editor_1.usePublisher)(editor_1.insertJsx$);
    const handleClick = () => {
        try {
            insertJsx({
                name: 'Chart',
                kind: 'flow',
                props: { ...exports.DEFAULT_CHART_PROPS },
            });
        }
        catch (error) {
            console.error('Error inserting Chart component:', error);
            alert('Could not insert chart component. See console for details.');
        }
    };
    return (react_1.default.createElement(editor_1.Button, { onClick: handleClick, title: 'Insert Line Graph', className: 'text-sm display-flex flex-align-center padding-1' },
        react_1.default.createElement(react_uswds_1.Icon.Insights, { className: 'margin-right-05 width-3 height-3', "aria-hidden": "true" }),
        "line graph"));
};
exports.InsertLineGraph = InsertLineGraph;
const InsertSectionBreak = () => {
    const insertJsx = (0, editor_1.usePublisher)(editor_1.insertJsx$);
    const handleClick = () => {
        try {
            insertJsx({
                name: 'Break',
                kind: 'text',
                props: {},
            });
        }
        catch (error) {
            console.error('Error inserting Break component:', error);
            alert('Could not insert break component. See console for details.');
        }
    };
    return (react_1.default.createElement(editor_1.Button, { onClick: handleClick, title: 'Insert Break', className: 'text-sm display-flex flex-align-center padding-1' }, "Insert Break"));
};
exports.InsertSectionBreak = InsertSectionBreak;
const InsertIframe = () => {
    const insertJsx = (0, editor_1.usePublisher)(editor_1.insertJsx$);
    const handleClick = () => {
        try {
            insertJsx({
                name: 'iframe',
                kind: 'flow',
                props: {
                    src: 'https://example.com',
                    width: '100%',
                    height: '400',
                    frameBorder: '0',
                    title: 'Embedded Content'
                },
            });
        }
        catch (error) {
            console.error('Error inserting iframe component:', error);
            alert('Could not insert iframe. See console for details.');
        }
    };
    return (react_1.default.createElement(editor_1.Button, { onClick: handleClick, title: 'Insert Iframe', className: 'text-sm display-flex flex-align-center padding-1' }, "Insert Iframe"));
};
exports.InsertIframe = InsertIframe;
