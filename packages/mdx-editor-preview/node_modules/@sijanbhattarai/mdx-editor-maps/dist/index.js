import Ve, { useState as ce, useEffect as yr, useCallback as We } from "react";
import { DevseedUiThemeProvider as hr, VedaUIProvider as gr, MapBlock as br } from "@teamimpact/veda-ui";
import { QueryClient as Er, QueryClientProvider as xr } from "@tanstack/react-query";
import "react-router-dom";
import { useMdastNodeUpdater as _r } from "@mdxeditor/editor";
import { theme as Be } from "@nasa-impact/mdx-editor-core";
var me = { exports: {} }, J = {};
/**
 * @license React
 * react-jsx-runtime.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var Ne;
function Rr() {
  if (Ne) return J;
  Ne = 1;
  var h = Ve, l = Symbol.for("react.element"), d = Symbol.for("react.fragment"), m = Object.prototype.hasOwnProperty, g = h.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner, v = { key: !0, ref: !0, __self: !0, __source: !0 };
  function T(O, y, I) {
    var b, j = {}, D = null, F = null;
    I !== void 0 && (D = "" + I), y.key !== void 0 && (D = "" + y.key), y.ref !== void 0 && (F = y.ref);
    for (b in y) m.call(y, b) && !v.hasOwnProperty(b) && (j[b] = y[b]);
    if (O && O.defaultProps) for (b in y = O.defaultProps, y) j[b] === void 0 && (j[b] = y[b]);
    return { $$typeof: l, type: O, key: D, ref: F, props: j, _owner: g.current };
  }
  return J.Fragment = d, J.jsx = T, J.jsxs = T, J;
}
var U = {};
/**
 * @license React
 * react-jsx-runtime.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var Ye;
function Tr() {
  return Ye || (Ye = 1, process.env.NODE_ENV !== "production" && function() {
    var h = Ve, l = Symbol.for("react.element"), d = Symbol.for("react.portal"), m = Symbol.for("react.fragment"), g = Symbol.for("react.strict_mode"), v = Symbol.for("react.profiler"), T = Symbol.for("react.provider"), O = Symbol.for("react.context"), y = Symbol.for("react.forward_ref"), I = Symbol.for("react.suspense"), b = Symbol.for("react.suspense_list"), j = Symbol.for("react.memo"), D = Symbol.for("react.lazy"), F = Symbol.for("react.offscreen"), M = Symbol.iterator, V = "@@iterator";
    function E(e) {
      if (e === null || typeof e != "object")
        return null;
      var r = M && e[M] || e[V];
      return typeof r == "function" ? r : null;
    }
    var P = h.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;
    function u(e) {
      {
        for (var r = arguments.length, t = new Array(r > 1 ? r - 1 : 0), a = 1; a < r; a++)
          t[a - 1] = arguments[a];
        L("error", e, t);
      }
    }
    function L(e, r, t) {
      {
        var a = P.ReactDebugCurrentFrame, o = a.getStackAddendum();
        o !== "" && (r += "%s", t = t.concat([o]));
        var s = t.map(function(i) {
          return String(i);
        });
        s.unshift("Warning: " + r), Function.prototype.apply.call(console[e], console, s);
      }
    }
    var W = !1, B = !1, q = !1, H = !1, K = !1, z;
    z = Symbol.for("react.module.reference");
    function G(e) {
      return !!(typeof e == "string" || typeof e == "function" || e === m || e === v || K || e === g || e === I || e === b || H || e === F || W || B || q || typeof e == "object" && e !== null && (e.$$typeof === D || e.$$typeof === j || e.$$typeof === T || e.$$typeof === O || e.$$typeof === y || // This needs to include all possible module reference object
      // types supported by any Flight configuration anywhere since
      // we don't know which Flight build this will end up being used
      // with.
      e.$$typeof === z || e.getModuleId !== void 0));
    }
    function re(e, r, t) {
      var a = e.displayName;
      if (a)
        return a;
      var o = r.displayName || r.name || "";
      return o !== "" ? t + "(" + o + ")" : t;
    }
    function _(e) {
      return e.displayName || "Context";
    }
    function C(e) {
      if (e == null)
        return null;
      if (typeof e.tag == "number" && u("Received an unexpected object in getComponentNameFromType(). This is likely a bug in React. Please file an issue."), typeof e == "function")
        return e.displayName || e.name || null;
      if (typeof e == "string")
        return e;
      switch (e) {
        case m:
          return "Fragment";
        case d:
          return "Portal";
        case v:
          return "Profiler";
        case g:
          return "StrictMode";
        case I:
          return "Suspense";
        case b:
          return "SuspenseList";
      }
      if (typeof e == "object")
        switch (e.$$typeof) {
          case O:
            var r = e;
            return _(r) + ".Consumer";
          case T:
            var t = e;
            return _(t._context) + ".Provider";
          case y:
            return re(e, e.render, "ForwardRef");
          case j:
            var a = e.displayName || null;
            return a !== null ? a : C(e.type) || "Memo";
          case D: {
            var o = e, s = o._payload, i = o._init;
            try {
              return C(i(s));
            } catch {
              return null;
            }
          }
        }
      return null;
    }
    var S = Object.assign, A = 0, ve, ye, he, ge, be, Ee, xe;
    function _e() {
    }
    _e.__reactDisabledLog = !0;
    function $e() {
      {
        if (A === 0) {
          ve = console.log, ye = console.info, he = console.warn, ge = console.error, be = console.group, Ee = console.groupCollapsed, xe = console.groupEnd;
          var e = {
            configurable: !0,
            enumerable: !0,
            value: _e,
            writable: !0
          };
          Object.defineProperties(console, {
            info: e,
            log: e,
            warn: e,
            error: e,
            group: e,
            groupCollapsed: e,
            groupEnd: e
          });
        }
        A++;
      }
    }
    function Je() {
      {
        if (A--, A === 0) {
          var e = {
            configurable: !0,
            enumerable: !0,
            writable: !0
          };
          Object.defineProperties(console, {
            log: S({}, e, {
              value: ve
            }),
            info: S({}, e, {
              value: ye
            }),
            warn: S({}, e, {
              value: he
            }),
            error: S({}, e, {
              value: ge
            }),
            group: S({}, e, {
              value: be
            }),
            groupCollapsed: S({}, e, {
              value: Ee
            }),
            groupEnd: S({}, e, {
              value: xe
            })
          });
        }
        A < 0 && u("disabledDepth fell below zero. This is a bug in React. Please file an issue.");
      }
    }
    var te = P.ReactCurrentDispatcher, ae;
    function X(e, r, t) {
      {
        if (ae === void 0)
          try {
            throw Error();
          } catch (o) {
            var a = o.stack.trim().match(/\n( *(at )?)/);
            ae = a && a[1] || "";
          }
        return `
` + ae + e;
      }
    }
    var ne = !1, Z;
    {
      var Ue = typeof WeakMap == "function" ? WeakMap : Map;
      Z = new Ue();
    }
    function Re(e, r) {
      if (!e || ne)
        return "";
      {
        var t = Z.get(e);
        if (t !== void 0)
          return t;
      }
      var a;
      ne = !0;
      var o = Error.prepareStackTrace;
      Error.prepareStackTrace = void 0;
      var s;
      s = te.current, te.current = null, $e();
      try {
        if (r) {
          var i = function() {
            throw Error();
          };
          if (Object.defineProperty(i.prototype, "props", {
            set: function() {
              throw Error();
            }
          }), typeof Reflect == "object" && Reflect.construct) {
            try {
              Reflect.construct(i, []);
            } catch (R) {
              a = R;
            }
            Reflect.construct(e, [], i);
          } else {
            try {
              i.call();
            } catch (R) {
              a = R;
            }
            e.call(i.prototype);
          }
        } else {
          try {
            throw Error();
          } catch (R) {
            a = R;
          }
          e();
        }
      } catch (R) {
        if (R && a && typeof R.stack == "string") {
          for (var n = R.stack.split(`
`), x = a.stack.split(`
`), c = n.length - 1, f = x.length - 1; c >= 1 && f >= 0 && n[c] !== x[f]; )
            f--;
          for (; c >= 1 && f >= 0; c--, f--)
            if (n[c] !== x[f]) {
              if (c !== 1 || f !== 1)
                do
                  if (c--, f--, f < 0 || n[c] !== x[f]) {
                    var w = `
` + n[c].replace(" at new ", " at ");
                    return e.displayName && w.includes("<anonymous>") && (w = w.replace("<anonymous>", e.displayName)), typeof e == "function" && Z.set(e, w), w;
                  }
                while (c >= 1 && f >= 0);
              break;
            }
        }
      } finally {
        ne = !1, te.current = s, Je(), Error.prepareStackTrace = o;
      }
      var Y = e ? e.displayName || e.name : "", k = Y ? X(Y) : "";
      return typeof e == "function" && Z.set(e, k), k;
    }
    function qe(e, r, t) {
      return Re(e, !1);
    }
    function He(e) {
      var r = e.prototype;
      return !!(r && r.isReactComponent);
    }
    function Q(e, r, t) {
      if (e == null)
        return "";
      if (typeof e == "function")
        return Re(e, He(e));
      if (typeof e == "string")
        return X(e);
      switch (e) {
        case I:
          return X("Suspense");
        case b:
          return X("SuspenseList");
      }
      if (typeof e == "object")
        switch (e.$$typeof) {
          case y:
            return qe(e.render);
          case j:
            return Q(e.type, r, t);
          case D: {
            var a = e, o = a._payload, s = a._init;
            try {
              return Q(s(o), r, t);
            } catch {
            }
          }
        }
      return "";
    }
    var $ = Object.prototype.hasOwnProperty, Te = {}, Pe = P.ReactDebugCurrentFrame;
    function ee(e) {
      if (e) {
        var r = e._owner, t = Q(e.type, e._source, r ? r.type : null);
        Pe.setExtraStackFrame(t);
      } else
        Pe.setExtraStackFrame(null);
    }
    function Ke(e, r, t, a, o) {
      {
        var s = Function.call.bind($);
        for (var i in e)
          if (s(e, i)) {
            var n = void 0;
            try {
              if (typeof e[i] != "function") {
                var x = Error((a || "React class") + ": " + t + " type `" + i + "` is invalid; it must be a function, usually from the `prop-types` package, but received `" + typeof e[i] + "`.This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.");
                throw x.name = "Invariant Violation", x;
              }
              n = e[i](r, i, a, t, null, "SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED");
            } catch (c) {
              n = c;
            }
            n && !(n instanceof Error) && (ee(o), u("%s: type specification of %s `%s` is invalid; the type checker function must return `null` or an `Error` but returned a %s. You may have forgotten to pass an argument to the type checker creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and shape all require an argument).", a || "React class", t, i, typeof n), ee(null)), n instanceof Error && !(n.message in Te) && (Te[n.message] = !0, ee(o), u("Failed %s type: %s", t, n.message), ee(null));
          }
      }
    }
    var ze = Array.isArray;
    function ie(e) {
      return ze(e);
    }
    function Ge(e) {
      {
        var r = typeof Symbol == "function" && Symbol.toStringTag, t = r && e[Symbol.toStringTag] || e.constructor.name || "Object";
        return t;
      }
    }
    function Xe(e) {
      try {
        return Ce(e), !1;
      } catch {
        return !0;
      }
    }
    function Ce(e) {
      return "" + e;
    }
    function we(e) {
      if (Xe(e))
        return u("The provided key is an unsupported type %s. This value must be coerced to a string before before using it here.", Ge(e)), Ce(e);
    }
    var je = P.ReactCurrentOwner, Ze = {
      key: !0,
      ref: !0,
      __self: !0,
      __source: !0
    }, Se, Oe;
    function Qe(e) {
      if ($.call(e, "ref")) {
        var r = Object.getOwnPropertyDescriptor(e, "ref").get;
        if (r && r.isReactWarning)
          return !1;
      }
      return e.ref !== void 0;
    }
    function er(e) {
      if ($.call(e, "key")) {
        var r = Object.getOwnPropertyDescriptor(e, "key").get;
        if (r && r.isReactWarning)
          return !1;
      }
      return e.key !== void 0;
    }
    function rr(e, r) {
      typeof e.ref == "string" && je.current;
    }
    function tr(e, r) {
      {
        var t = function() {
          Se || (Se = !0, u("%s: `key` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://reactjs.org/link/special-props)", r));
        };
        t.isReactWarning = !0, Object.defineProperty(e, "key", {
          get: t,
          configurable: !0
        });
      }
    }
    function ar(e, r) {
      {
        var t = function() {
          Oe || (Oe = !0, u("%s: `ref` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://reactjs.org/link/special-props)", r));
        };
        t.isReactWarning = !0, Object.defineProperty(e, "ref", {
          get: t,
          configurable: !0
        });
      }
    }
    var nr = function(e, r, t, a, o, s, i) {
      var n = {
        // This tag allows us to uniquely identify this as a React Element
        $$typeof: l,
        // Built-in properties that belong on the element
        type: e,
        key: r,
        ref: t,
        props: i,
        // Record the component responsible for creating this element.
        _owner: s
      };
      return n._store = {}, Object.defineProperty(n._store, "validated", {
        configurable: !1,
        enumerable: !1,
        writable: !0,
        value: !1
      }), Object.defineProperty(n, "_self", {
        configurable: !1,
        enumerable: !1,
        writable: !1,
        value: a
      }), Object.defineProperty(n, "_source", {
        configurable: !1,
        enumerable: !1,
        writable: !1,
        value: o
      }), Object.freeze && (Object.freeze(n.props), Object.freeze(n)), n;
    };
    function ir(e, r, t, a, o) {
      {
        var s, i = {}, n = null, x = null;
        t !== void 0 && (we(t), n = "" + t), er(r) && (we(r.key), n = "" + r.key), Qe(r) && (x = r.ref, rr(r, o));
        for (s in r)
          $.call(r, s) && !Ze.hasOwnProperty(s) && (i[s] = r[s]);
        if (e && e.defaultProps) {
          var c = e.defaultProps;
          for (s in c)
            i[s] === void 0 && (i[s] = c[s]);
        }
        if (n || x) {
          var f = typeof e == "function" ? e.displayName || e.name || "Unknown" : e;
          n && tr(i, f), x && ar(i, f);
        }
        return nr(e, n, x, o, a, je.current, i);
      }
    }
    var oe = P.ReactCurrentOwner, Ie = P.ReactDebugCurrentFrame;
    function N(e) {
      if (e) {
        var r = e._owner, t = Q(e.type, e._source, r ? r.type : null);
        Ie.setExtraStackFrame(t);
      } else
        Ie.setExtraStackFrame(null);
    }
    var se;
    se = !1;
    function le(e) {
      return typeof e == "object" && e !== null && e.$$typeof === l;
    }
    function De() {
      {
        if (oe.current) {
          var e = C(oe.current.type);
          if (e)
            return `

Check the render method of \`` + e + "`.";
        }
        return "";
      }
    }
    function or(e) {
      return "";
    }
    var Ae = {};
    function sr(e) {
      {
        var r = De();
        if (!r) {
          var t = typeof e == "string" ? e : e.displayName || e.name;
          t && (r = `

Check the top-level render call using <` + t + ">.");
        }
        return r;
      }
    }
    function ke(e, r) {
      {
        if (!e._store || e._store.validated || e.key != null)
          return;
        e._store.validated = !0;
        var t = sr(r);
        if (Ae[t])
          return;
        Ae[t] = !0;
        var a = "";
        e && e._owner && e._owner !== oe.current && (a = " It was passed a child from " + C(e._owner.type) + "."), N(e), u('Each child in a list should have a unique "key" prop.%s%s See https://reactjs.org/link/warning-keys for more information.', t, a), N(null);
      }
    }
    function Fe(e, r) {
      {
        if (typeof e != "object")
          return;
        if (ie(e))
          for (var t = 0; t < e.length; t++) {
            var a = e[t];
            le(a) && ke(a, r);
          }
        else if (le(e))
          e._store && (e._store.validated = !0);
        else if (e) {
          var o = E(e);
          if (typeof o == "function" && o !== e.entries)
            for (var s = o.call(e), i; !(i = s.next()).done; )
              le(i.value) && ke(i.value, r);
        }
      }
    }
    function lr(e) {
      {
        var r = e.type;
        if (r == null || typeof r == "string")
          return;
        var t;
        if (typeof r == "function")
          t = r.propTypes;
        else if (typeof r == "object" && (r.$$typeof === y || // Note: Memo only checks outer props here.
        // Inner props are checked in the reconciler.
        r.$$typeof === j))
          t = r.propTypes;
        else
          return;
        if (t) {
          var a = C(r);
          Ke(t, e.props, "prop", a, e);
        } else if (r.PropTypes !== void 0 && !se) {
          se = !0;
          var o = C(r);
          u("Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?", o || "Unknown");
        }
        typeof r.getDefaultProps == "function" && !r.getDefaultProps.isReactClassApproved && u("getDefaultProps is only used on classic React.createClass definitions. Use a static property named `defaultProps` instead.");
      }
    }
    function ur(e) {
      {
        for (var r = Object.keys(e.props), t = 0; t < r.length; t++) {
          var a = r[t];
          if (a !== "children" && a !== "key") {
            N(e), u("Invalid prop `%s` supplied to `React.Fragment`. React.Fragment can only have `key` and `children` props.", a), N(null);
            break;
          }
        }
        e.ref !== null && (N(e), u("Invalid attribute `ref` supplied to `React.Fragment`."), N(null));
      }
    }
    var Me = {};
    function Le(e, r, t, a, o, s) {
      {
        var i = G(e);
        if (!i) {
          var n = "";
          (e === void 0 || typeof e == "object" && e !== null && Object.keys(e).length === 0) && (n += " You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.");
          var x = or();
          x ? n += x : n += De();
          var c;
          e === null ? c = "null" : ie(e) ? c = "array" : e !== void 0 && e.$$typeof === l ? (c = "<" + (C(e.type) || "Unknown") + " />", n = " Did you accidentally export a JSX literal instead of a component?") : c = typeof e, u("React.jsx: type is invalid -- expected a string (for built-in components) or a class/function (for composite components) but got: %s.%s", c, n);
        }
        var f = ir(e, r, t, o, s);
        if (f == null)
          return f;
        if (i) {
          var w = r.children;
          if (w !== void 0)
            if (a)
              if (ie(w)) {
                for (var Y = 0; Y < w.length; Y++)
                  Fe(w[Y], e);
                Object.freeze && Object.freeze(w);
              } else
                u("React.jsx: Static children should always be an array. You are likely explicitly calling React.jsxs or React.jsxDEV. Use the Babel transform instead.");
            else
              Fe(w, e);
        }
        if ($.call(r, "key")) {
          var k = C(e), R = Object.keys(r).filter(function(vr) {
            return vr !== "key";
          }), ue = R.length > 0 ? "{key: someKey, " + R.join(": ..., ") + ": ...}" : "{key: someKey}";
          if (!Me[k + ue]) {
            var mr = R.length > 0 ? "{" + R.join(": ..., ") + ": ...}" : "{}";
            u(`A props object containing a "key" prop is being spread into JSX:
  let props = %s;
  <%s {...props} />
React keys must be passed directly to JSX without using spread:
  let props = %s;
  <%s key={someKey} {...props} />`, ue, k, mr, k), Me[k + ue] = !0;
          }
        }
        return e === m ? ur(f) : lr(f), f;
      }
    }
    function cr(e, r, t) {
      return Le(e, r, t, !0);
    }
    function dr(e, r, t) {
      return Le(e, r, t, !1);
    }
    var fr = dr, pr = cr;
    U.Fragment = m, U.jsx = fr, U.jsxs = pr;
  }()), U;
}
process.env.NODE_ENV === "production" ? me.exports = Rr() : me.exports = Tr();
var p = me.exports;
const de = {
  "lpjeosim-wetlandch4-grid-v1": {
    id: "lpjeosim-wetlandch4-grid-v1",
    data: {
      id: "lpjeosim-wetlandch4-grid-v1",
      name: "Wetland Methane Emissions, LPJ-EOSIM Model (Minimal)",
      description: "Global monthly and daily 0.5 degree resolution estimates of wetland methane emissions from the LPJ-EOSIM model, version 1",
      usage: [],
      media: {},
      taxonomy: [],
      infoDescription: "Minimal description for LPJ-EOSIM dataset.",
      layers: [
        {
          id: "ch4-wetlands-emissions-m-ens",
          stacCol: "lpjeosim-wetlandch4-monthgrid-v1",
          name: "(Monthly) Ensemble Mean Wetland CH₄ Emissions LPJ-EOSIM Model",
          type: "raster",
          description: "Monthly CH₄ emissions from wetlands constructed using an ensemble of climate forcing data sources input to the LPJ-EOSIM model (mean of ERA5 and MERRA-2 layers)",
          initialDatetime: "newest",
          projection: { id: "equirectangular" },
          zoomExtent: [0, 20],
          sourceParams: { assets: "ensemble-mean-ch4-wetlands-emissions", colormap_name: "magma", rescale: [0, 3e-9] },
          compare: { datasetId: "lpjeosim-wetlandch4-grid-v1", layerId: "ch4-wetlands-emissions-m-ens", mapLabel: "::js ({ dateFns, datetime, compareDatetime }) => { if (dateFns && datetime && compareDatetime) return `${dateFns.format(datetime, 'LLLraquinone')} VS ${dateFns.format(compareDatetime, 'LLLraquinone')}`; }" },
          legend: { unit: { label: "kg CH₄/m²/s" }, type: "gradient", min: 0, max: 3e-9, stops: ["#2c115f", "#721f81", "#b73779", "#f1605d", "#feb078"] },
          analysis: { metrics: ["mean"], sourceParams: { dst_crs: "+proj=cea" } },
          info: { source: "NASA", spatialExtent: "Global", temporalResolution: "Monthly", unit: "kg CH₄/m²/s" },
          params_config: [
            {
              id: "datetime",
              name: "Date",
              type: "datetime",
              domain: [],
              default: "newest"
            }
          ],
          sources: []
        }
        // Ensure all layers from lpjeosim that might be used by Scrollytelling are fully defined here
      ]
    }
  },
  sandbox: {
    id: "sandbox",
    data: {
      id: "sandbox",
      name: "Sandbox Dataset (for MapBlock Preview)",
      description: "Dataset for testing MapBlock previews.",
      usage: [],
      media: {},
      taxonomy: [],
      infoDescription: "Sandbox dataset.",
      layers: [
        {
          id: "nightlights-hd-monthly",
          // Layer used in your initialContent
          stacCol: "some-dummy-stac-collection-nightlights",
          name: "HD Nightlights Monthly (Preview)",
          type: "raster",
          description: "Monthly HD Nightlights for preview.",
          initialDatetime: "2020-03-01T00:00:00Z",
          projection: { id: "equirectangular" },
          zoomExtent: [0, 18],
          sourceParams: { assets: "cog_default", colormap_name: "viridis", rescale: [0, 100] },
          legend: { unit: { label: "Radiance" }, type: "gradient", min: 0, max: 100, stops: ["#000004", "#3B0F70", "#8C2981", "#DE4968", "#FE9F6D", "#FCFDBF"] },
          mapLabel: "HD Nightlights Preview",
          compare: { datasetId: "sandbox", layerId: "nightlights-hd-monthly", mapLabel: "Comparison View" },
          analysis: { metrics: ["mean"], sourceParams: { dst_crs: "+proj=cea" } },
          info: { source: "Mock Data", spatialExtent: "Global", temporalResolution: "Monthly", unit: "nW/cm²/sr" },
          params_config: [
            {
              id: "datetime",
              name: "Observation Date",
              type: "datetime",
              domain: ["2020-01-01T00:00:00Z", "2020-12-31T23:59:59Z"],
              default: "2020-03-01T00:00:00Z"
            }
          ],
          sources: []
        },
        {
          id: "no2-monthly",
          stacCol: "no2-monthly-diff",
          name: "NO₂ Monthly Layer (Preview)",
          type: "raster",
          description: "Monthly NO₂ levels for preview.",
          initialDatetime: "2020-01-01T00:00:00Z",
          projection: { id: "equirectangular" },
          zoomExtent: [0, 20],
          sourceParams: { assets: "cog_default", colormap_name: "rdbu_r", rescale: [-8e15, 8e15] },
          legend: { unit: { label: "NO₂ Level (ppb)" }, type: "gradient", min: -8e15, max: 8e15, stops: ["#67001F", "#B2182B", "#D6604D", "#F4A582", "#FDDBC7", "#F7F7F7", "#D1E5F0", "#92C5DE", "#4393C3", "#2166AC", "#053061"] },
          mapLabel: "NO₂ Monthly (Sandbox Preview)",
          compare: { datasetId: "sandbox", layerId: "no2-monthly", mapLabel: "Comparison" },
          analysis: { metrics: ["mean"], sourceParams: { dst_crs: "+proj=cea" } },
          info: { source: "Mock Source", spatialExtent: "Global", temporalResolution: "Monthly", unit: "ppb" },
          params_config: [
            {
              id: "datetime",
              name: "Observation Date",
              type: "datetime",
              domain: ["2020-01-01T00:00:00Z", "2020-12-31T23:59:59Z"],
              default: "2020-01-01T00:00:00Z"
            }
          ],
          sources: []
        }
      ]
    }
  }
}, Pr = new Er(), fe = (h, l, d = void 0) => {
  if (!h || !Array.isArray(h.attributes))
    return d;
  const m = h.attributes.find((v) => v.name === l);
  if (!m) return d;
  if (m.value && typeof m.value == "object" && m.value.type === "mdxJsxAttributeValueExpression") {
    try {
      const v = m.value.data?.estree;
      if (v && v.body && v.body.length > 0 && v.body[0].type === "ExpressionStatement") {
        const T = v.body[0].expression;
        if (T.type === "Literal")
          return T.value;
        if ((T.type === "ArrayExpression" || T.type === "ObjectExpression") && typeof m.value.value == "string")
          return m.value.value;
      }
    } catch {
    }
    return m.value.value;
  }
  let g = m.value;
  if (typeof g == "string") {
    const v = g.toLowerCase().trim();
    if (v === "true") return !0;
    if (v === "false") return !1;
  }
  return g;
}, pe = (h, l) => typeof l == "boolean" ? { type: "mdxJsxAttribute", name: h, value: { type: "mdxJsxAttributeValueExpression", value: l ? "true" : "false" } } : typeof l == "number" ? { type: "mdxJsxAttribute", name: h, value: { type: "mdxJsxAttributeValueExpression", value: String(l) } } : typeof l == "string" && l.trim().startsWith("[") && l.trim().endsWith("]") || l.trim().startsWith("{") && l.trim().endsWith("}") ? { type: "mdxJsxAttribute", name: h, value: { type: "mdxJsxAttributeValueExpression", value: l } } : { type: "mdxJsxAttribute", name: h, value: String(l) }, Dr = ({ mdastNode: h }) => {
  const l = _r(), [d, m] = ce({
    datasetId: "sandbox",
    layerId: "no2-monthly",
    dateTime: ""
  }), [g, v] = ce({}), [T, O] = ce(!1);
  yr(() => {
    const E = {
      datasetId: fe(h, "datasetId", "sandbox"),
      layerId: fe(h, "layerId", "no2-monthly"),
      dateTime: fe(h, "dateTime", "")
    };
    m(E), I(E);
  }, [h]);
  const y = (E) => {
    const { name: P, value: u, type: L, checked: W } = E.target;
    m((B) => ({
      ...B,
      [P]: L === "checkbox" ? W : u
    }));
  }, I = We((E) => {
    const {
      datasetId: P,
      layerId: u,
      dateTime: L,
      compareDateTime: W,
      compareLabel: B,
      projectionId: q,
      projectionCenterStr: H,
      projectionParallelsStr: K,
      allowProjectionChange: z
    } = E, G = de[P], re = G?.data?.layers.find((_) => _.id === u);
    if (G && re) {
      O(!0);
      const _ = { datasetId: P, layerId: u };
      L && (_.dateTime = L), W && (_.compareDateTime = W), B && (_.compareLabel = B), q && (_.projectionId = q);
      let C, S;
      if (H)
        try {
          C = JSON.parse(H);
        } catch {
        }
      if (K)
        try {
          S = JSON.parse(K);
        } catch {
        }
      C !== void 0 && (_.projectionCenter = C), S !== void 0 && (_.projectionParallels = S), _.allowProjectionChange = z, _.datasets = de, v(_);
    } else
      O(!1), v({ datasetId: P, layerId: u });
  }, []), b = We(() => {
    const E = [];
    d.datasetId && E.push(pe("datasetId", d.datasetId)), d.layerId && E.push(pe("layerId", d.layerId)), d.dateTime && E.push(pe("dateTime", d.dateTime)), l({ attributes: E }), I(d);
  }, [d, l, I]), j = process.env.MDX_EDITOR_MAPBOX_TOKEN || "YOUR_FALLBACK_MAPBOX_TOKEN_HERE", D = process.env.MDX_EDITOR_API_STAC_ENDPOINT || "https://openveda.cloud/api/stac", F = process.env.MDX_EDITOR_API_RASTER_ENDPOINT || "https://openveda.cloud/api/raster", M = (E) => ({
    name: E,
    onBlur: b,
    style: { width: "100%", padding: "6px", boxSizing: "border-box", marginBottom: "2px" }
  }), V = { display: "block", marginBottom: "2px", fontSize: "0.85em", fontWeight: "500" };
  return /* @__PURE__ */ p.jsxs("div", { style: { border: "2px solid #28a745", padding: "15px", margin: "5px", backgroundColor: "#f0fff0" }, children: [
    /* @__PURE__ */ p.jsx("h4", { style: { marginTop: 0, marginBottom: "12px", borderBottom: "1px solid #ccc", paddingBottom: "8px" }, children: "Edit MapBlock Properties" }),
    /* @__PURE__ */ p.jsxs("div", { style: { display: "grid", gridTemplateColumns: "repeat(auto-fill, minmax(220px, 1fr))", gap: "12px 18px", marginBottom: "20px" }, children: [
      /* @__PURE__ */ p.jsxs("div", { children: [
        /* @__PURE__ */ p.jsx("label", { style: V, htmlFor: "datasetId", children: "Dataset ID:" }),
        /* @__PURE__ */ p.jsx("input", { type: "text", id: "datasetId", ...M("datasetId"), value: d.datasetId, onChange: y })
      ] }),
      /* @__PURE__ */ p.jsxs("div", { children: [
        /* @__PURE__ */ p.jsx("label", { style: V, htmlFor: "layerId", children: "Layer ID:" }),
        /* @__PURE__ */ p.jsx("input", { type: "text", id: "layerId", ...M("layerId"), value: d.layerId, onChange: y })
      ] }),
      /* @__PURE__ */ p.jsxs("div", { children: [
        /* @__PURE__ */ p.jsx("label", { style: V, htmlFor: "dateTime", children: "Date/Time:" }),
        /* @__PURE__ */ p.jsx("input", { type: "text", id: "dateTime", ...M("dateTime"), value: d.dateTime, onChange: y, placeholder: "YYYY-MM-DDTHH:mm:ssZ" })
      ] })
    ] }),
    /* @__PURE__ */ p.jsxs("div", { style: { marginTop: "20px", borderTop: "1px solid #ccc", paddingTop: "15px" }, children: [
      /* @__PURE__ */ p.jsx("p", { style: { margin: "0 0 10px 0", fontWeight: "bold", fontSize: "0.9em", color: "#2C3E50", textAlign: "center" }, children: "Live Map Preview" }),
      /* @__PURE__ */ p.jsx("div", { style: { minHeight: "350px", position: "relative", border: "1px solid lightgrey" }, children: T && g.datasetId && g.layerId ? /* @__PURE__ */ p.jsx(xr, { client: Pr, children: /* @__PURE__ */ p.jsx(hr, { theme: Be, children: /* @__PURE__ */ p.jsx(
        gr,
        {
          config: {
            envMapboxToken: j,
            envApiStacEndpoint: D,
            envApiRasterEndpoint: F,
            datasets: de,
            navigation: { LinkComponent: "a", linkProps: { pathAttributeKeyName: "href" } },
            theme: Be
          },
          children: g.datasetId && g.layerId && /* @__PURE__ */ p.jsx(br, { ...g })
        }
      ) }) }) : /* @__PURE__ */ p.jsxs("p", { style: { textAlign: "center", color: "grey", padding: "20px" }, children: [
        "Preview unavailable: Ensure Dataset ID ('",
        g.datasetId || d.datasetId || "empty",
        "') and Layer ID ('",
        g.layerId || d.layerId || "empty",
        "') are valid."
      ] }) })
    ] })
  ] });
};
export {
  Dr as MapBlockInteractiveEditor
};
//# sourceMappingURL=index.js.map
