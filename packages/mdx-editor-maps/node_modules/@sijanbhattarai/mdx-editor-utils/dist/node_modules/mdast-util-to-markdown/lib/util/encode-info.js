import { classifyCharacter as s } from "../../../micromark-util-classify-character/index.js";
function f(d, n, t) {
  const i = s(d), e = s(n);
  return i === void 0 ? e === void 0 ? (
    // Letter inside:
    // we have to encode *both* letters for `_` as it is looser.
    // it already forms for `*` (and GFMs `~`).
    t === "_" ? { inside: !0, outside: !0 } : { inside: !1, outside: !1 }
  ) : e === 1 ? (
    // Whitespace inside: encode both (letter, whitespace).
    { inside: !0, outside: !0 }
  ) : (
    // Punctuation inside: encode outer (letter)
    { inside: !1, outside: !0 }
  ) : i === 1 ? e === void 0 ? (
    // Letter inside: already forms.
    { inside: !1, outside: !1 }
  ) : e === 1 ? (
    // Whitespace inside: encode both (whitespace).
    { inside: !0, outside: !0 }
  ) : (
    // Punctuation inside: already forms.
    { inside: !1, outside: !1 }
  ) : e === void 0 ? (
    // Letter inside: already forms.
    { inside: !1, outside: !1 }
  ) : e === 1 ? (
    // Whitespace inside: encode inner (whitespace).
    { inside: !0, outside: !1 }
  ) : (
    // Punctuation inside: already forms.
    { inside: !1, outside: !1 }
  );
}
export {
  f as encodeInfo
};
//# sourceMappingURL=encode-info.js.map
