{"version":3,"file":"configure.js","sources":["../../../../../../node_modules/mdast-util-to-markdown/lib/configure.js"],"sourcesContent":["/**\n * @import {Options, State} from './types.js'\n */\n\nconst own = {}.hasOwnProperty\n\n/**\n * @param {State} base\n * @param {Options} extension\n * @returns {State}\n */\nexport function configure(base, extension) {\n  let index = -1\n  /** @type {keyof Options} */\n  let key\n\n  // First do subextensions.\n  if (extension.extensions) {\n    while (++index < extension.extensions.length) {\n      configure(base, extension.extensions[index])\n    }\n  }\n\n  for (key in extension) {\n    if (own.call(extension, key)) {\n      switch (key) {\n        case 'extensions': {\n          // Empty.\n          break\n        }\n\n        /* c8 ignore next 4 */\n        case 'unsafe': {\n          list(base[key], extension[key])\n          break\n        }\n\n        case 'join': {\n          list(base[key], extension[key])\n          break\n        }\n\n        case 'handlers': {\n          map(base[key], extension[key])\n          break\n        }\n\n        default: {\n          // @ts-expect-error: matches.\n          base.options[key] = extension[key]\n        }\n      }\n    }\n  }\n\n  return base\n}\n\n/**\n * @template T\n * @param {Array<T>} left\n * @param {Array<T> | null | undefined} right\n */\nfunction list(left, right) {\n  if (right) {\n    left.push(...right)\n  }\n}\n\n/**\n * @template T\n * @param {Record<string, T>} left\n * @param {Record<string, T> | null | undefined} right\n */\nfunction map(left, right) {\n  if (right) {\n    Object.assign(left, right)\n  }\n}\n"],"names":["own","configure","base","extension","index","key","list","map","left","right"],"mappings":"AAIA,MAAMA,IAAM,CAAA,EAAG;AAOR,SAASC,EAAUC,GAAMC,GAAW;AACzC,MAAIC,IAAQ,IAERC;AAGJ,MAAIF,EAAU;AACZ,WAAO,EAAEC,IAAQD,EAAU,WAAW;AACpC,MAAAF,EAAUC,GAAMC,EAAU,WAAWC,CAAK,CAAC;AAI/C,OAAKC,KAAOF;AACV,QAAIH,EAAI,KAAKG,GAAWE,CAAG;AACzB,cAAQA,GAAG;AAAA,QACT,KAAK;AAEH;AAAA;AAAA,QAIF,KAAK,UAAU;AACb,UAAAC,EAAKJ,EAAKG,CAAG,GAAGF,EAAUE,CAAG,CAAC;AAC9B;AAAA,QACF;AAAA,QAEA,KAAK,QAAQ;AACX,UAAAC,EAAKJ,EAAKG,CAAG,GAAGF,EAAUE,CAAG,CAAC;AAC9B;AAAA,QACF;AAAA,QAEA,KAAK,YAAY;AACf,UAAAE,EAAIL,EAAKG,CAAG,GAAGF,EAAUE,CAAG,CAAC;AAC7B;AAAA,QACF;AAAA,QAEA;AAEE,UAAAH,EAAK,QAAQG,CAAG,IAAIF,EAAUE,CAAG;AAAA,MAE3C;AAIE,SAAOH;AACT;AAOA,SAASI,EAAKE,GAAMC,GAAO;AACzB,EAAIA,KACFD,EAAK,KAAK,GAAGC,CAAK;AAEtB;AAOA,SAASF,EAAIC,GAAMC,GAAO;AACxB,EAAIA,KACF,OAAO,OAAOD,GAAMC,CAAK;AAE7B;","x_google_ignoreList":[0]}