{"version":3,"file":"container-flow.js","sources":["../../../../../../../node_modules/mdast-util-to-markdown/lib/util/container-flow.js"],"sourcesContent":["/**\n * @import {State} from 'mdast-util-to-markdown'\n * @import {FlowChildren, FlowParents, TrackFields} from '../types.js'\n */\n\n/**\n * @param {FlowParents} parent\n *   Parent of flow nodes.\n * @param {State} state\n *   Info passed around about the current state.\n * @param {TrackFields} info\n *   Info on where we are in the document we are generating.\n * @returns {string}\n *   Serialized children, joined by (blank) lines.\n */\nexport function containerFlow(parent, state, info) {\n  const indexStack = state.indexStack\n  const children = parent.children || []\n  const tracker = state.createTracker(info)\n  /** @type {Array<string>} */\n  const results = []\n  let index = -1\n\n  indexStack.push(-1)\n\n  while (++index < children.length) {\n    const child = children[index]\n\n    indexStack[indexStack.length - 1] = index\n\n    results.push(\n      tracker.move(\n        state.handle(child, parent, state, {\n          before: '\\n',\n          after: '\\n',\n          ...tracker.current()\n        })\n      )\n    )\n\n    if (child.type !== 'list') {\n      state.bulletLastUsed = undefined\n    }\n\n    if (index < children.length - 1) {\n      results.push(\n        tracker.move(between(child, children[index + 1], parent, state))\n      )\n    }\n  }\n\n  indexStack.pop()\n\n  return results.join('')\n}\n\n/**\n * @param {FlowChildren} left\n * @param {FlowChildren} right\n * @param {FlowParents} parent\n * @param {State} state\n * @returns {string}\n */\nfunction between(left, right, parent, state) {\n  let index = state.join.length\n\n  while (index--) {\n    const result = state.join[index](left, right, parent, state)\n\n    if (result === true || result === 1) {\n      break\n    }\n\n    if (typeof result === 'number') {\n      return '\\n'.repeat(1 + result)\n    }\n\n    if (result === false) {\n      return '\\n\\n<!---->\\n\\n'\n    }\n  }\n\n  return '\\n\\n'\n}\n"],"names":["containerFlow","parent","state","info","indexStack","children","tracker","results","index","child","between","left","right","result"],"mappings":"AAeO,SAASA,EAAcC,GAAQC,GAAOC,GAAM;AACjD,QAAMC,IAAaF,EAAM,YACnBG,IAAWJ,EAAO,YAAY,CAAA,GAC9BK,IAAUJ,EAAM,cAAcC,CAAI,GAElCI,IAAU,CAAA;AAChB,MAAIC,IAAQ;AAIZ,OAFAJ,EAAW,KAAK,EAAE,GAEX,EAAEI,IAAQH,EAAS,UAAQ;AAChC,UAAMI,IAAQJ,EAASG,CAAK;AAE5B,IAAAJ,EAAWA,EAAW,SAAS,CAAC,IAAII,GAEpCD,EAAQ;AAAA,MACND,EAAQ;AAAA,QACNJ,EAAM,OAAOO,GAAOR,GAAQC,GAAO;AAAA,UACjC,QAAQ;AAAA;AAAA,UACR,OAAO;AAAA;AAAA,UACP,GAAGI,EAAQ,QAAO;AAAA,QAC5B,CAAS;AAAA,MACT;AAAA,IACA,GAEQG,EAAM,SAAS,WACjBP,EAAM,iBAAiB,SAGrBM,IAAQH,EAAS,SAAS,KAC5BE,EAAQ;AAAA,MACND,EAAQ,KAAKI,EAAQD,GAAOJ,EAASG,IAAQ,CAAC,GAAGP,GAAQC,CAAK,CAAC;AAAA,IACvE;AAAA,EAEE;AAEA,SAAAE,EAAW,IAAG,GAEPG,EAAQ,KAAK,EAAE;AACxB;AASA,SAASG,EAAQC,GAAMC,GAAOX,GAAQC,GAAO;AAC3C,MAAIM,IAAQN,EAAM,KAAK;AAEvB,SAAOM,OAAS;AACd,UAAMK,IAASX,EAAM,KAAKM,CAAK,EAAEG,GAAMC,GAAOX,GAAQC,CAAK;AAE3D,QAAIW,MAAW,MAAQA,MAAW;AAChC;AAGF,QAAI,OAAOA,KAAW;AACpB,aAAO;AAAA,EAAK,OAAO,IAAIA,CAAM;AAG/B,QAAIA,MAAW;AACb,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA,EAEX;AAEA,SAAO;AAAA;AAAA;AACT;","x_google_ignoreList":[0]}