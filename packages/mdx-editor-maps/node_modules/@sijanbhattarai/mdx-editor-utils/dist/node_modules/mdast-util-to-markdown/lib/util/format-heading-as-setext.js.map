{"version":3,"file":"format-heading-as-setext.js","sources":["../../../../../../../node_modules/mdast-util-to-markdown/lib/util/format-heading-as-setext.js"],"sourcesContent":["/**\n * @import {State} from 'mdast-util-to-markdown'\n * @import {Heading} from 'mdast'\n */\n\nimport {EXIT, visit} from 'unist-util-visit'\nimport {toString} from 'mdast-util-to-string'\n\n/**\n * @param {Heading} node\n * @param {State} state\n * @returns {boolean}\n */\nexport function formatHeadingAsSetext(node, state) {\n  let literalWithBreak = false\n\n  // Look for literals with a line break.\n  // Note that this also\n  visit(node, function (node) {\n    if (\n      ('value' in node && /\\r?\\n|\\r/.test(node.value)) ||\n      node.type === 'break'\n    ) {\n      literalWithBreak = true\n      return EXIT\n    }\n  })\n\n  return Boolean(\n    (!node.depth || node.depth < 3) &&\n      toString(node) &&\n      (state.options.setext || literalWithBreak)\n  )\n}\n"],"names":["formatHeadingAsSetext","node","state","literalWithBreak","visit","EXIT","toString"],"mappings":";;AAaO,SAASA,EAAsBC,GAAMC,GAAO;AACjD,MAAIC,IAAmB;AAIvB,SAAAC,EAAMH,GAAM,SAAUA,GAAM;AAC1B,QACG,WAAWA,KAAQ,WAAW,KAAKA,EAAK,KAAK,KAC9CA,EAAK,SAAS;AAEd,aAAAE,IAAmB,IACZE;AAAA,EAEX,CAAC,GAEM,IACJ,CAACJ,EAAK,SAASA,EAAK,QAAQ,MAC3BK,EAASL,CAAI,MACZC,EAAM,QAAQ,UAAUC;AAE/B;","x_google_ignoreList":[0]}