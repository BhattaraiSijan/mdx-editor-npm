{"version":3,"file":"CreateInterface.js","sources":["../src/CreateInterface.tsx"],"sourcesContent":["'use client';\n\nimport React, { useEffect, useRef, useState } from 'react';\n\nimport {\n  TextInput,\n  TextInputMask,\n  Textarea,\n  Label,\n  DatePicker,\n  Checkbox,\n  Select,\n} from '@trussworks/react-uswds';\nimport {\n  handleMapDateValidation,\n  handleMapArrayValidation,\n  handleChartDateValidation,\n} from './inputValidation';\n\ninterface FieldProps {\n  fieldName: string;\n  value: string;\n  hint?: string;\n  onChange: (value: string) => void;\n  isRequired?: boolean;\n  isDate?: boolean;\n  numeric?: boolean;\n  onBlur?: (value: string) => void;\n  onFocus?: (value: string) => void;\n  type?: string;\n  componentProps: any;\n  propName: string;\n  customClass?: string;\n  placeHolder?: string;\n  draftInputs?: any;\n  inputErrors?: any;\n  setDraftInputs?: (value: any) => void;\n  setInputErrors?: (value: any) => void;\n  options?: string[];\n}\nconst checkRequired = (isRequired, value) => {\n  return isRequired && !value ? { validationStatus: 'error' } : '';\n};\n\nconst colorSchemes = [\n  'Blues',\n  'Greens',\n  'Greys',\n  'Oranges',\n  'Purples',\n  'Reds',\n  'Turbo',\n  'Viridis',\n  'Inferno',\n  'Magma',\n  'Plasma',\n  'Cividis',\n  'Warm',\n  'Cool',\n  'CubehelixDefault',\n];\n\nconst setInput = (props) => {\n  const {\n    value,\n    isRequired,\n    type,\n    fieldName,\n    hint,\n    onChange,\n    componentProps,\n    propName,\n    placeHolder,\n    validateAgainst,\n    draftInputs,\n    setDraftInputs,\n    inputErrors,\n    setInputErrors,\n    options,\n  } = props;\n\nif (options && Array.isArray(options)) {\n    return (\n      <>\n        <Label htmlFor={propName} className='margin-top-2'>\n          {fieldName}\n        </Label>\n        <span className='usa-hint'>{hint}</span>\n        <Select\n          id={propName}\n          name={propName}\n          value={value}\n          onChange={(e) =>\n            onChange({ ...componentProps, [propName]: e.target.value })\n          }\n          {...checkRequired(isRequired, value)}\n        >\n          <option value=''>- Select option -</option>\n          {options.map((option) => {\n            // Check if option is a string or an object with value/label\n            const value = typeof option === 'object' ? option.value : option;\n            const label = typeof option === 'object' ? option.label : option;\n\n            return (\n              <option key={value} value={value}>\n                {label}\n              </option>\n            );\n          })}\n        </Select>\n      </>\n    );\n  }\n\n  const cleanedType = type !== undefined && type.toLowerCase();\n\n  const [draft, setDraft] = useState(value);\n\n  const timeoutRef = useRef<ReturnType<typeof setTimeout> | null>(null);\n\n  useEffect(() => {\n\n    if (propName === 'dateFormat' && draft != draftInputs.draftDateFormat) {\n      setDraftInputs({ ...draftInputs, draftDateFormat: draft });\n    }\n    if (\n      propName === 'highlightStart' &&\n      draft != draftInputs.draftHighlightStart\n    ) {\n      setDraftInputs({ ...draftInputs, draftHighlightStart: draft });\n    }\n    if (propName === 'highlightEnd' && draft != draftInputs.draftHighlightEnd) {\n      setDraftInputs({ ...draftInputs, draftHighlightEnd: draft });\n    }\n    clearTimeout(timeoutRef.current);\n    timeoutRef.current = setTimeout(() => {\n\n      if (validateAgainst) {\n        if (\n          propName === 'dateFormat' ||\n          propName === 'highlightStart' ||\n          propName === 'highlightEnd'\n        ) {\n          handleChartDateValidation(\n            propName,\n            draftInputs,\n            setInputErrors,\n            inputErrors,\n            draft,\n            onChange,\n            componentProps,\n          );\n        } else if (validateAgainst === 'defaultDateFormat') {\n          handleMapDateValidation(\n            propName,\n            draftInputs,\n            inputErrors,\n            setInputErrors,\n            draft,\n            onChange,\n            componentProps,\n          );\n        } else if (validateAgainst === 'centerFormat') {\n          handleMapArrayValidation(\n            propName,\n            draftInputs,\n            inputErrors,\n            setInputErrors,\n            draft,\n            onChange,\n            componentProps,\n          );\n        } else {\n          onChange({ ...componentProps, [propName]: draft });\n        }\n      }\n    }, 400);\n\n    return () => clearTimeout(timeoutRef.current);\n  }, [draft, draftInputs]);\n\n  //Format date and submitted dates need to work or else the chart will throw an error.\n\n  switch (cleanedType) {\n    case 'date':\n      return (\n        //CHORE: Need to clean up or delete\n        <>\n          <Label htmlFor='input-type-text' className='margin-top-2'>\n            {fieldName}\n          </Label>\n\n          <span className='usa-hint'>{hint}</span>\n\n          <DatePicker\n            defaultValue={value}\n            onChange={(e) => console.log('DatePicker', e)}\n            {...checkRequired(isRequired, value)}\n          />\n        </>\n      );\n      break;\n    case 'checkbox':\n      return (\n        <Checkbox\n          id={fieldName}\n          name='checkbox'\n          label={fieldName}\n          onChange={(e) =>\n            onChange({ ...componentProps, [propName]: e.target.value })\n          }\n        />\n      );\n      break;\n    case 'select':\n      return (\n        <>\n          <Label htmlFor='input-type-text' className='margin-top-2'>\n            {fieldName}\n          </Label>\n          <span className='usa-hint'>{hint}</span>\n          <Select\n            id={fieldName}\n            name={fieldName}\n            onChange={(e) =>\n              onChange({ ...componentProps, [propName]: e.target.value })\n            }\n          >\n            {colorSchemes.map((scheme) => {\n              return (\n                <option key={scheme} value={scheme}>\n                  {scheme}\n                </option>\n              );\n            })}\n          </Select>\n        </>\n      );\n      break;\n    case 'area':\n      return (\n        <>\n          <Label htmlFor='input-type-text' className='margin-top-2'>\n            {fieldName}\n          </Label>\n          <span className='usa-hint'>{hint}</span>\n          <Textarea\n            id='input-type-text'\n            name='input-type-text'\n            value={value}\n            onChange={(e) => {\n              onChange({ ...componentProps, [propName]: e.target.value });\n            }}\n            className=''\n            {...checkRequired(isRequired, value)}\n          />\n        </>\n      );\n      break;\n    default:\n      return (\n        <>\n          <Label htmlFor='input-type-text' className='margin-top-2'>\n            {fieldName}\n          </Label>\n\n          <span className='usa-hint'>{hint}</span>\n          <TextInput\n            id='input-type-text'\n            name='input-type-text'\n            type='text'\n            value={validateAgainst ? draft : value}\n            onChange={(e) => {\n              if (validateAgainst) {\n\n                setDraft(e.target.value);\n              } else {\n\n                onChange({ ...componentProps, [propName]: e.target.value });\n              }\n            }}\n            placeholder={placeHolder}\n            {...checkRequired(isRequired, value)}\n            validationStatus={\n              validateAgainst && (inputErrors[propName] ? 'error' : undefined)\n            }\n          />\n        </>\n      );\n  }\n};\nexport const InputField: React.FC<FieldProps> = (props) => {\n  const { propName, customClass } = props;\n\n  return (\n    <div key={propName} className={customClass}>\n      {setInput(props)}\n    </div>\n  );\n};\n"],"names":["checkRequired","isRequired","value","colorSchemes","setInput","props","type","fieldName","hint","onChange","componentProps","propName","placeHolder","validateAgainst","draftInputs","setDraftInputs","inputErrors","setInputErrors","options","jsxs","Fragment","jsx","Label","Select","e","option","label","cleanedType","draft","setDraft","useState","timeoutRef","useRef","useEffect","handleMapArrayValidation","DatePicker","Checkbox","scheme","Textarea","TextInput","InputField","customClass"],"mappings":";;;;AAwCA,MAAMA,IAAgB,CAACC,GAAYC,MAC1BD,KAAc,CAACC,IAAQ,EAAE,kBAAkB,YAAY,IAG1DC,IAAe;AAAA,EACnB;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF,GAEMC,IAAW,CAACC,MAAU;AAC1B,QAAM;AAAA,IACJ,OAAAH;AAAA,IACA,YAAAD;AAAA,IACA,MAAAK;AAAA,IACA,WAAAC;AAAA,IACA,MAAAC;AAAA,IACA,UAAAC;AAAA,IACA,gBAAAC;AAAA,IACA,UAAAC;AAAA,IACA,aAAAC;AAAA,IACA,iBAAAC;AAAA,IACA,aAAAC;AAAA,IACA,gBAAAC;AAAA,IACA,aAAAC;AAAA,IACA,gBAAAC;AAAA,IACA,SAAAC;AAAA,EAAA,IACEb;AAEN,MAAIa,KAAW,MAAM,QAAQA,CAAO;AAChC,WACEC,gBAAAA,EAAAA,KAAAC,YAAA,EACE,UAAA;AAAA,MAAAC,gBAAAA,MAACC,GAAA,EAAM,SAASX,GAAU,WAAU,gBACjC,UAAAJ,GACH;AAAA,MACAc,gBAAAA,EAAAA,IAAC,QAAA,EAAK,WAAU,YAAY,UAAAb,GAAK;AAAA,MACjCW,gBAAAA,EAAAA;AAAAA,QAACI;AAAAA,QAAA;AAAA,UACC,IAAIZ;AAAA,UACJ,MAAMA;AAAA,UACN,OAAAT;AAAA,UACA,UAAU,CAACsB,MACTf,EAAS,EAAE,GAAGC,GAAgB,CAACC,CAAQ,GAAGa,EAAE,OAAO,OAAO;AAAA,UAE3D,GAAGxB,EAAcC,GAAYC,CAAK;AAAA,UAEnC,UAAA;AAAA,YAAAmB,gBAAAA,EAAAA,IAAC,UAAA,EAAO,OAAM,IAAG,UAAA,qBAAiB;AAAA,YACjCH,EAAQ,IAAI,CAACO,MAAW;AAEvB,oBAAMvB,IAAQ,OAAOuB,KAAW,WAAWA,EAAO,QAAQA,GACpDC,IAAQ,OAAOD,KAAW,WAAWA,EAAO,QAAQA;AAE1D,qBACEJ,gBAAAA,EAAAA,IAAC,UAAA,EAAmB,OAAOnB,GACxB,eADUA,CAEb;AAAA,YAEJ,CAAC;AAAA,UAAA;AAAA,QAAA;AAAA,MAAA;AAAA,IACH,GACF;AAIJ,QAAMyB,IAAcrB,MAAS,UAAaA,EAAK,YAAA,GAEzC,CAACsB,GAAOC,CAAQ,IAAIC,EAAS5B,CAAK,GAElC6B,IAAaC,EAA6C,IAAI;AAiEpE,UA/DAC,EAAU,OAEJtB,MAAa,gBAAgBiB,KAASd,EAAY,mBACpDC,EAAe,EAAE,GAAGD,GAAa,iBAAiBc,GAAO,GAGzDjB,MAAa,oBACbiB,KAASd,EAAY,uBAErBC,EAAe,EAAE,GAAGD,GAAa,qBAAqBc,GAAO,GAE3DjB,MAAa,kBAAkBiB,KAASd,EAAY,qBACtDC,EAAe,EAAE,GAAGD,GAAa,mBAAmBc,GAAO,GAE7D,aAAaG,EAAW,OAAO,GAC/BA,EAAW,UAAU,WAAW,MAAM;AAEpC,IAAIlB,MAEAF,MAAa,gBACbA,MAAa,oBACbA,MAAa,kBAWJE,MAAoB,wBAUpBA,MAAoB,iBAC7BqB;AAAA,MACEvB;AAAA,IAOF,IAEAF,EAAS,EAAE,GAAGC,GAAgB,CAACC,CAAQ,GAAGiB,GAAO;AAAA,EAGvD,GAAG,GAAG,GAEC,MAAM,aAAaG,EAAW,OAAO,IAC3C,CAACH,GAAOd,CAAW,CAAC,GAIfa,GAAA;AAAA,IACN,KAAK;AACH;AAAA;AAAA,QAEER,gBAAAA,OAAAC,EAAAA,UAAA,EACE,UAAA;AAAA,UAAAC,gBAAAA,MAACC,GAAA,EAAM,SAAQ,mBAAkB,WAAU,gBACxC,UAAAf,GACH;AAAA,UAEAc,gBAAAA,EAAAA,IAAC,QAAA,EAAK,WAAU,YAAY,UAAAb,GAAK;AAAA,UAEjCa,gBAAAA,EAAAA;AAAAA,YAACc;AAAAA,YAAA;AAAA,cACC,cAAcjC;AAAA,cACd,UAAU,CAACsB,MAAM,QAAQ,IAAI,cAAcA,CAAC;AAAA,cAC3C,GAAGxB,EAAcC,GAAYC,CAAK;AAAA,YAAA;AAAA,UAAA;AAAA,QACrC,EAAA,CACF;AAAA;AAAA,IAGJ,KAAK;AACH,aACEmB,gBAAAA,EAAAA;AAAAA,QAACe;AAAAA,QAAA;AAAA,UACC,IAAI7B;AAAA,UACJ,MAAK;AAAA,UACL,OAAOA;AAAA,UACP,UAAU,CAACiB,MACTf,EAAS,EAAE,GAAGC,GAAgB,CAACC,CAAQ,GAAGa,EAAE,OAAO,OAAO;AAAA,QAAA;AAAA,MAAA;AAAA,IAKlE,KAAK;AACH,aACEL,gBAAAA,EAAAA,KAAAC,YAAA,EACE,UAAA;AAAA,QAAAC,gBAAAA,MAACC,GAAA,EAAM,SAAQ,mBAAkB,WAAU,gBACxC,UAAAf,GACH;AAAA,QACAc,gBAAAA,EAAAA,IAAC,QAAA,EAAK,WAAU,YAAY,UAAAb,GAAK;AAAA,QACjCa,gBAAAA,EAAAA;AAAAA,UAACE;AAAAA,UAAA;AAAA,YACC,IAAIhB;AAAA,YACJ,MAAMA;AAAA,YACN,UAAU,CAACiB,MACTf,EAAS,EAAE,GAAGC,GAAgB,CAACC,CAAQ,GAAGa,EAAE,OAAO,OAAO;AAAA,YAG3D,UAAArB,EAAa,IAAI,CAACkC,MAEfhB,gBAAAA,EAAAA,IAAC,UAAA,EAAoB,OAAOgB,GACzB,eADUA,CAEb,CAEH;AAAA,UAAA;AAAA,QAAA;AAAA,MACH,GACF;AAAA,IAGJ,KAAK;AACH,aACElB,gBAAAA,EAAAA,KAAAC,YAAA,EACE,UAAA;AAAA,QAAAC,gBAAAA,MAACC,GAAA,EAAM,SAAQ,mBAAkB,WAAU,gBACxC,UAAAf,GACH;AAAA,QACAc,gBAAAA,EAAAA,IAAC,QAAA,EAAK,WAAU,YAAY,UAAAb,GAAK;AAAA,QACjCa,gBAAAA,EAAAA;AAAAA,UAACiB;AAAAA,UAAA;AAAA,YACC,IAAG;AAAA,YACH,MAAK;AAAA,YACL,OAAApC;AAAA,YACA,UAAU,CAACsB,MAAM;AACf,cAAAf,EAAS,EAAE,GAAGC,GAAgB,CAACC,CAAQ,GAAGa,EAAE,OAAO,OAAO;AAAA,YAC5D;AAAA,YACA,WAAU;AAAA,YACT,GAAGxB,EAAcC,GAAYC,CAAK;AAAA,UAAA;AAAA,QAAA;AAAA,MACrC,GACF;AAAA,IAGJ;AACE,aACEiB,gBAAAA,EAAAA,KAAAC,YAAA,EACE,UAAA;AAAA,QAAAC,gBAAAA,MAACC,GAAA,EAAM,SAAQ,mBAAkB,WAAU,gBACxC,UAAAf,GACH;AAAA,QAEAc,gBAAAA,EAAAA,IAAC,QAAA,EAAK,WAAU,YAAY,UAAAb,GAAK;AAAA,QACjCa,gBAAAA,EAAAA;AAAAA,UAACkB;AAAAA,UAAA;AAAA,YACC,IAAG;AAAA,YACH,MAAK;AAAA,YACL,MAAK;AAAA,YACL,OAAO1B,IAAkBe,IAAQ1B;AAAA,YACjC,UAAU,CAACsB,MAAM;AACf,cAAIX,IAEFgB,EAASL,EAAE,OAAO,KAAK,IAGvBf,EAAS,EAAE,GAAGC,GAAgB,CAACC,CAAQ,GAAGa,EAAE,OAAO,OAAO;AAAA,YAE9D;AAAA,YACA,aAAaZ;AAAA,YACZ,GAAGZ,EAAcC,GAAYC,CAAK;AAAA,YACnC,kBACEW,MAAoBG,EAAYL,CAAQ,IAAI,UAAU;AAAA,UAAA;AAAA,QAAA;AAAA,MAE1D,GACF;AAAA,EAAA;AAGR,GACa6B,IAAmC,CAACnC,MAAU;AACzD,QAAM,EAAE,UAAAM,GAAU,aAAA8B,EAAA,IAAgBpC;AAElC,+BACG,OAAA,EAAmB,WAAWoC,GAC5B,UAAArC,EAASC,CAAK,KADPM,CAEV;AAEJ;"}